{
  "version": 3,
  "sources": ["../bundle-jCbFcw/checked-fetch.js", "../bundle-jCbFcw/middleware-loader.entry.ts", "wrangler-modules-watch:wrangler:modules-watch", "../bundle-jCbFcw/middleware-insertion-facade.js", "../../../src/chatbot/api/chatbot-worker.js", "../../../src/ai-engine/ai-integration.js", "../../../src/conversation-flows/conversation-designer.js", "../../../src/knowledge-base/it-era-knowledge.js", "../../../src/knowledge-base/it-era-knowledge-real.js", "../../../src/chatbot/api/teams-webhook.js", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/dev-gADmrN",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/bundle-jCbFcw/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/andreapanzeri/progetti/IT-ERA/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/bundle-jCbFcw/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/bundle-jCbFcw/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/andreapanzeri/progetti/IT-ERA/api/src/chatbot/api/chatbot-worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/andreapanzeri/progetti/IT-ERA/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/andreapanzeri/progetti/IT-ERA/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/andreapanzeri/progetti/IT-ERA/api/src/chatbot/api/chatbot-worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "/**\n * IT-ERA AI-Powered Chatbot API Worker\n * Enhanced Cloudflare Worker with AI integration, advanced conversation flows,\n * and intelligent lead qualification system\n */\n\nimport AIIntegrationEngine from '../../ai-engine/ai-integration.js';\nimport ConversationDesigner from '../../conversation-flows/conversation-designer.js';\n// Import updated knowledge base with real IT-ERA data\nimport { ITERAKnowledgeBase, KnowledgeUtils } from '../../knowledge-base/it-era-knowledge-real.js';\n// Import Teams webhook integration\nimport teamsWebhook from './teams-webhook.js';\n\nconst CONFIG = {\n  // AI Settings\n  AI_PROVIDER: 'openai', // 'openai' or 'anthropic'\n  AI_MODEL: 'gpt-4o-mini', // Cost-effective model\n  AI_MAX_TOKENS: 150,\n  AI_TEMPERATURE: 0.7,\n  AI_COST_LIMIT: 0.10, // $0.10 per conversation\n  AI_CACHE_TTL: 3600, // 1 hour response cache\n  \n  // Enhanced Chat settings\n  MAX_SESSION_DURATION: 3600, // 1 hour for AI conversations\n  MAX_MESSAGES_PER_SESSION: 25, // Increased for AI interactions\n  RATE_LIMIT_MESSAGES: 60, // messages/hour per IP\n  AI_RATE_LIMIT: 10, // AI calls per minute per session\n  \n  // Email integration (preserved from existing system)\n  EMAIL_API_ENDPOINT: 'https://it-era-email.bulltech.workers.dev/api/contact',\n  \n  // Performance settings\n  RESPONSE_TIMEOUT: 8000, // 8 seconds max response time\n  FALLBACK_TIMEOUT: 2000, // 2 seconds before fallback\n  \n  // CORS settings\n  ALLOWED_ORIGINS: [\n    'https://www.it-era.it',\n    'https://it-era.it', \n    'https://it-era.pages.dev',\n    'http://localhost:3000',\n    'http://localhost:8788',\n    'http://127.0.0.1:5500'\n  ],\n};\n\n// CORS headers\nconst corsHeaders = (origin) => ({\n  'Access-Control-Allow-Origin': CONFIG.ALLOWED_ORIGINS.includes(origin) ? origin : CONFIG.ALLOWED_ORIGINS[0],\n  'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type',\n  'Content-Type': 'application/json',\n});\n\n// Genera session ID univoco\nfunction generateSessionId() {\n  return `chat_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// Initialize AI and Conversation systems\nlet aiEngine = null;\nlet conversationDesigner = null;\n\n// Initialize AI systems\nasync function initializeAI(env) {\n  if (!aiEngine) {\n    aiEngine = new AIIntegrationEngine({\n      provider: CONFIG.AI_PROVIDER,\n      model: CONFIG.AI_MODEL,\n      maxTokens: CONFIG.AI_MAX_TOKENS,\n      temperature: CONFIG.AI_TEMPERATURE,\n      costLimit: CONFIG.AI_COST_LIMIT,\n      language: 'italian'\n    });\n    \n    await aiEngine.initializeProvider(env);\n  }\n  \n  if (!conversationDesigner) {\n    conversationDesigner = new ConversationDesigner({\n      maxConversationLength: CONFIG.MAX_MESSAGES_PER_SESSION,\n      escalationThreshold: 0.7,\n      leadQualificationScore: 0.8,\n      language: 'italian'\n    });\n  }\n  \n  return { aiEngine, conversationDesigner };\n}\n\n// Enhanced AI-powered intent recognition\nasync function classifyIntent(message, context = {}, env) {\n  try {\n    // Initialize AI if needed\n    const { aiEngine, conversationDesigner } = await initializeAI(env);\n    \n    // Use conversation designer for intent recognition\n    const response = await conversationDesigner.processMessage(message, context);\n    \n    return {\n      intent: response.intent,\n      confidence: response.confidence,\n      escalate: response.escalation?.required || false,\n      escalationType: response.escalation?.type,\n      priority: response.escalation?.priority || 'medium'\n    };\n    \n  } catch (error) {\n    console.error('AI Intent Classification Error:', error);\n    \n    // Fallback to simple pattern matching\n    return fallbackIntentClassification(message);\n  }\n}\n\n// Fallback intent classification (original logic)\nfunction fallbackIntentClassification(message) {\n  const msg = message.toLowerCase();\n  \n  if (msg.includes('preventivo') || msg.includes('prezzo') || msg.includes('costo')) {\n    return { intent: 'preventivo', confidence: 0.8, escalate: false };\n  }\n  if (msg.includes('assistenza') || msg.includes('supporto') || msg.includes('aiuto') || msg.includes('problema')) {\n    return { intent: 'supporto', confidence: 0.8, escalate: false };\n  }\n  if (msg.includes('umano') || msg.includes('persona') || msg.includes('operatore')) {\n    return { intent: 'human_request', confidence: 0.9, escalate: true };\n  }\n  if (msg.includes('servizi') || msg.includes('cosa fate') || msg.includes('informazioni')) {\n    return { intent: 'informazioni', confidence: 0.7, escalate: false };\n  }\n  \n  return { intent: 'generale', confidence: 0.5, escalate: false };\n}\n\n// Enhanced AI-powered response generation\nasync function generateResponse(message, context = {}, env) {\n  try {\n    const sessionId = context.sessionId || 'unknown';\n    \n    // Initialize AI systems\n    const { aiEngine, conversationDesigner } = await initializeAI(env);\n    \n    // Check if we should use AI or fallback to conversation flows\n    const useAI = shouldUseAI(context, env);\n    \n    if (useAI) {\n      // Generate AI response with timeout\n      const aiPromise = generateAIResponse(message, context, aiEngine, sessionId);\n      const timeoutPromise = new Promise((_, reject) => \n        setTimeout(() => reject(new Error('AI timeout')), CONFIG.FALLBACK_TIMEOUT)\n      );\n      \n      try {\n        const aiResponse = await Promise.race([aiPromise, timeoutPromise]);\n        \n        // Process through conversation designer\n        const flowResponse = await conversationDesigner.processMessage(\n          message, context, aiResponse\n        );\n        \n        return {\n          ...flowResponse,\n          aiPowered: true,\n          cost: aiResponse.cost || 0,\n          cached: aiResponse.cached || false\n        };\n        \n      } catch (aiError) {\n        console.warn('AI generation failed, using fallback:', aiError);\n        return await generateFallbackResponse(message, context, conversationDesigner);\n      }\n    } else {\n      // Use conversation flows only\n      return await generateFallbackResponse(message, context, conversationDesigner);\n    }\n    \n  } catch (error) {\n    console.error('Response generation error:', error);\n    return getEmergencyFallbackResponse();\n  }\n}\n\n// Generate AI-powered response\nasync function generateAIResponse(message, context, aiEngine, sessionId) {\n  const aiResponse = await aiEngine.generateResponse(message, context, sessionId);\n  \n  // If AI suggests escalation or reaches limits, handle gracefully\n  if (aiResponse.escalate || aiResponse.intent === 'cost_limit_reached') {\n    return {\n      ...aiResponse,\n      escalationRequired: true,\n      escalationReason: aiResponse.intent === 'cost_limit_reached' ? \n                       'cost_limit' : 'ai_suggested'\n    };\n  }\n  \n  return aiResponse;\n}\n\n// Generate fallback response using conversation flows\nasync function generateFallbackResponse(message, context, conversationDesigner) {\n  const response = await conversationDesigner.processMessage(message, context);\n  \n  return {\n    ...response,\n    aiPowered: false,\n    fallbackUsed: true,\n    cost: 0\n  };\n}\n\n// Determine if AI should be used\nfunction shouldUseAI(context, env) {\n  // Don't use AI if no API keys\n  if (!env.OPENAI_API_KEY && !env.ANTHROPIC_API_KEY) {\n    return false;\n  }\n  \n  // Don't use AI if session has exceeded cost limit\n  if (context.totalCost && context.totalCost > CONFIG.AI_COST_LIMIT) {\n    return false;\n  }\n  \n  // Don't use AI for simple/structured steps\n  const structuredSteps = ['contact_collection', 'escalation_preparation'];\n  if (structuredSteps.includes(context.currentStep)) {\n    return false;\n  }\n  \n  return true;\n}\n\n// Emergency fallback response\nfunction getEmergencyFallbackResponse() {\n  return {\n    message: \"Scusa, sto avendo alcuni problemi tecnici. Ti metto subito in contatto con un nostro consulente che ti assister\u00E0 al meglio.\",\n    options: [\"Contatto immediato\", \"Riprova pi\u00F9 tardi\"],\n    nextStep: \"emergency_escalation\",\n    escalate: true,\n    priority: 'high',\n    aiPowered: false,\n    emergency: true\n  };\n}\n\n// Gestione sessione conversazione\nasync function getOrCreateSession(sessionId, CHAT_SESSIONS) {\n  if (!sessionId) {\n    sessionId = generateSessionId();\n  }\n  \n  let session = await CHAT_SESSIONS.get(sessionId);\n  \n  if (!session) {\n    session = {\n      id: sessionId,\n      created: Date.now(),\n      messages: [],\n      context: {},\n      step: \"greeting\",\n      leadData: {}\n    };\n  } else {\n    session = JSON.parse(session);\n  }\n  \n  return session;\n}\n\n// Salva sessione\nasync function saveSession(session, CHAT_SESSIONS) {\n  await CHAT_SESSIONS.put(session.id, JSON.stringify(session), {\n    expirationTtl: CONFIG.MAX_SESSION_DURATION\n  });\n}\n\n// Check rate limiting\nasync function checkRateLimit(ip, CHAT_SESSIONS) {\n  const key = `rate_limit:${ip}`;\n  const current = await CHAT_SESSIONS.get(key);\n  \n  if (current) {\n    const count = parseInt(current);\n    if (count >= CONFIG.RATE_LIMIT_MESSAGES) {\n      return false;\n    }\n    await CHAT_SESSIONS.put(key, String(count + 1), { expirationTtl: 3600 });\n  } else {\n    await CHAT_SESSIONS.put(key, '1', { expirationTtl: 3600 });\n  }\n  \n  return true;\n}\n\n// Enhanced email integration with AI context\nasync function sendToEmailSystem(leadData, conversationContext = {}) {\n  try {\n    // Build comprehensive email data with AI insights\n    const emailData = {\n      // Basic lead information\n      nome: leadData.contact_name || leadData.nome || 'Lead da Chat AI',\n      email: leadData.email || '',\n      telefono: leadData.phone || leadData.telefono || '',\n      azienda: leadData.company_name || leadData.azienda || '',\n      comune: leadData.location || leadData.comune || '',\n      dipendenti: leadData.company_size || leadData.dipendenti || '',\n      \n      // Service information\n      servizi: Array.isArray(leadData.servizi) ? leadData.servizi : \n               leadData.service_type ? [leadData.service_type] : [],\n      urgenza: leadData.urgency || leadData.urgenza || 'normale',\n      \n      // Enhanced message with conversation insights\n      messaggio: buildEnhancedMessage(leadData, conversationContext),\n      \n      // AI-specific metadata\n      formType: 'ai-chatbot-lead',\n      privacy: true,\n      aiGenerated: true,\n      conversationId: conversationContext.sessionId,\n      leadQuality: conversationContext.leadQuality || 'medium',\n      escalationReason: conversationContext.escalationReason || 'completed_qualification',\n      conversationSummary: conversationContext.conversationSummary || {},\n      timestamp: new Date().toISOString()\n    };\n    \n    // Add AI conversation metrics\n    if (conversationContext.aiMetrics) {\n      emailData.aiMetrics = {\n        totalCost: conversationContext.totalCost || 0,\n        responseTime: conversationContext.averageResponseTime || 0,\n        messageCount: conversationContext.messageCount || 0,\n        aiConfidence: conversationContext.averageConfidence || 0\n      };\n    }\n    \n    const response = await fetch(CONFIG.EMAIL_API_ENDPOINT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'User-Agent': 'IT-ERA-AI-Chatbot/1.0'\n      },\n      body: JSON.stringify(emailData)\n    });\n    \n    const result = await response.json();\n    \n    return { \n      success: response.ok, \n      data: result,\n      emailData: emailData // Include for debugging\n    };\n    \n  } catch (error) {\n    console.error('Enhanced email integration error:', error);\n    return { success: false, error: error.message };\n  }\n}\n\n// Build enhanced message with conversation context\nfunction buildEnhancedMessage(leadData, context) {\n  let message = leadData.messaggio || leadData.message || '';\n  \n  // Add conversation context\n  if (context.sessionId) {\n    message += `\\n\\n--- Informazioni Conversazione AI ---\\n`;\n    message += `Sessione: ${context.sessionId}\\n`;\n    message += `Messaggi scambiati: ${context.messageCount || 0}\\n`;\n    \n    if (context.leadQuality) {\n      message += `Qualit\u00E0 lead: ${context.leadQuality}\\n`;\n    }\n    \n    if (context.escalationReason) {\n      message += `Motivo escalation: ${context.escalationReason}\\n`;\n    }\n    \n    if (leadData.budget_range) {\n      message += `Budget indicativo: ${leadData.budget_range}\\n`;\n    }\n    \n    if (leadData.timeline) {\n      message += `Timeline progetto: ${leadData.timeline}\\n`;\n    }\n    \n    if (leadData.sector) {\n      message += `Settore: ${leadData.sector}\\n`;\n    }\n  }\n  \n  return message;\n}\n\n// Calculate average response time for metrics\nfunction calculateAverageResponseTime(messages) {\n  const botMessages = messages.filter(m => m.type === 'bot' && m.responseTime);\n  if (botMessages.length === 0) return 0;\n  \n  const totalTime = botMessages.reduce((sum, msg) => sum + (msg.responseTime || 0), 0);\n  return Math.round(totalTime / botMessages.length);\n}\n\n// Session cleanup for AI data\nasync function cleanupAISession(sessionId, CHAT_SESSIONS) {\n  try {\n    const session = await CHAT_SESSIONS.get(sessionId);\n    if (!session) return;\n    \n    const sessionData = JSON.parse(session);\n    \n    // Log final metrics\n    if (sessionData.context) {\n      console.log(`Session ${sessionId} completed:`, {\n        messageCount: sessionData.context.messageCount,\n        totalCost: sessionData.context.totalCost,\n        averageResponseTime: sessionData.context.averageResponseTime,\n        escalated: !!sessionData.escalation\n      });\n    }\n    \n    // Clean up the session\n    await CHAT_SESSIONS.delete(sessionId);\n    \n  } catch (error) {\n    console.error('Session cleanup error:', error);\n  }\n}\n\n// Main worker handler\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const origin = request.headers.get('Origin') || '';\n    \n    // Health check\n    if (url.pathname === '/health') {\n      return new Response(JSON.stringify({\n        status: 'ok',\n        service: 'IT-ERA Chatbot API',\n        provider: 'Cloudflare Workers',\n        timestamp: new Date().toISOString()\n      }), {\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n    \n    // CORS preflight\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        headers: corsHeaders(origin),\n      });\n    }\n    \n    // Solo POST su /api/chat\n    if (request.method !== 'POST' || url.pathname !== '/api/chat') {\n      return new Response(JSON.stringify({\n        error: 'Method not allowed',\n        message: 'Use POST /api/chat'\n      }), {\n        status: 405,\n        headers: corsHeaders(origin),\n      });\n    }\n    \n    try {\n      // Get client IP\n      const ip = request.headers.get('CF-Connecting-IP') || \n                 request.headers.get('X-Forwarded-For') || \n                 'unknown';\n      \n      // Rate limiting\n      if (env.CHAT_SESSIONS) {\n        const canProceed = await checkRateLimit(ip, env.CHAT_SESSIONS);\n        if (!canProceed) {\n          return new Response(JSON.stringify({\n            success: false,\n            error: 'Troppe richieste. Riprova tra un\\'ora.'\n          }), {\n            status: 429,\n            headers: corsHeaders(origin),\n          });\n        }\n      }\n      \n      // Parse request\n      const data = await request.json();\n      const { message, sessionId, action } = data;\n      \n      // Get or create session\n      let session = await getOrCreateSession(sessionId, env.CHAT_SESSIONS);\n      \n      // Handle different actions\n      if (action === 'start') {\n        // Initialize conversation with AI-powered greeting\n        session.context = {\n          sessionId: session.id,\n          currentStep: 'greeting',\n          messageCount: 0,\n          totalCost: 0,\n          startTime: Date.now()\n        };\n        \n        const response = await generateResponse('start', session.context, env);\n        \n        session.messages.push({\n          type: 'bot',\n          content: response.message,\n          options: response.options,\n          timestamp: Date.now(),\n          aiPowered: response.aiPowered\n        });\n        \n        session.step = response.nextStep;\n        session.context.currentStep = response.nextStep;\n        \n        await saveSession(session, env.CHAT_SESSIONS);\n        \n        return new Response(JSON.stringify({\n          success: true,\n          sessionId: session.id,\n          response: response.message,\n          options: response.options,\n          step: response.nextStep,\n          aiPowered: response.aiPowered\n        }), {\n          headers: corsHeaders(origin),\n        });\n      }\n      \n      if (action === 'message' && message) {\n        // Add user message to session\n        session.messages.push({\n          type: 'user',\n          content: message,\n          timestamp: Date.now()\n        });\n        \n        // Update conversation context\n        session.context = {\n          ...session.context,\n          sessionId: session.id,\n          currentMessage: message,\n          messageCount: session.messages.length,\n          lastActivity: Date.now()\n        };\n        \n        // Generate enhanced AI response with timeout handling\n        const startTime = Date.now();\n        const responsePromise = generateResponse(message, session.context, env);\n        const timeoutPromise = new Promise((resolve) => {\n          setTimeout(() => resolve(getEmergencyFallbackResponse()), CONFIG.RESPONSE_TIMEOUT);\n        });\n        \n        const response = await Promise.race([responsePromise, timeoutPromise]);\n        const responseTime = Date.now() - startTime;\n        \n        // Add bot response to session\n        session.messages.push({\n          type: 'bot',\n          content: response.message,\n          options: response.options,\n          timestamp: Date.now(),\n          aiPowered: response.aiPowered,\n          responseTime,\n          cost: response.cost || 0\n        });\n        \n        // Update session with new context and response data\n        session.step = response.nextStep;\n        session.context = {\n          ...session.context,\n          ...(response.context || {}),\n          currentStep: response.nextStep,\n          totalCost: (session.context.totalCost || 0) + (response.cost || 0),\n          averageResponseTime: calculateAverageResponseTime(session.messages)\n        };\n        \n        // Handle escalation if required - with Teams notification\n        if (response.escalate || response.escalationRequired) {\n          session.escalation = {\n            required: true,\n            type: response.escalationType || 'user_request',\n            priority: response.priority || 'medium',\n            reason: response.escalationReason,\n            timestamp: Date.now(),\n            conversationSummary: conversationDesigner ? \n                               conversationDesigner.getConversationSummary(session.context) : {}\n          };\n          \n          // Send Teams notification for escalation\n          const teamsWebhookUrl = env.TEAMS_WEBHOOK_URL || \"https://bulltechit.webhook.office.com/webhookb2/621e560e-86d9-478c-acfc-496624a88b79@f6ba30ad-37c0-41bf-a994-e434c59b4b2a/IncomingWebhook/fb2b1700f71c4806bdcbf0fc873952d0/c0aa99b7-8edb-41b4-b139-0ec4dd7864d5/V2l2_rh4MbAzeQQ4SpDifcMFLsktri3ocfMcQGZ6OHUmI1\";\n          \n          if (teamsWebhookUrl && globalThis.TeamsWebhook) {\n            try {\n              const leadData = globalThis.TeamsWebhook.collectLeadData(session.context, { message });\n              await globalThis.TeamsWebhook.sendTeamsNotification(leadData, teamsWebhookUrl);\n              console.log('Teams notification sent for escalation');\n            } catch (error) {\n              console.error('Failed to send Teams notification:', error);\n            }\n          }\n          \n          // If high priority, prepare for immediate handoff\n          if (response.priority === 'high' || response.priority === 'immediate') {\n            session.context.needsImmediateHandoff = true;\n          }\n        }\n        \n        // Collect lead data if provided\n        if (response.collectData && data.leadData) {\n          session.context.leadData = {\n            ...session.context.leadData,\n            ...data.leadData\n          };\n        }\n        \n        await saveSession(session, env.CHAT_SESSIONS);\n        \n        // Prepare response with enhanced data\n        const responseData = {\n          success: true,\n          sessionId: session.id,\n          response: response.message,\n          options: response.options,\n          step: response.nextStep,\n          intent: response.intent,\n          confidence: response.confidence,\n          aiPowered: response.aiPowered,\n          responseTime,\n          escalate: response.escalate || false,\n          escalationType: response.escalationType,\n          cached: response.cached || false,\n          cost: response.cost || 0\n        };\n        \n        // Add debug info in development\n        if (env.NODE_ENV === 'development') {\n          responseData.debug = {\n            contextStep: session.context.currentStep,\n            messageCount: session.context.messageCount,\n            totalCost: session.context.totalCost,\n            leadData: session.context.leadData\n          };\n        }\n        \n        return new Response(JSON.stringify(responseData), {\n          headers: corsHeaders(origin),\n        });\n      }\n      \n      if (action === 'email_handoff' || action === 'escalate') {\n        // Enhanced handoff to email system with AI context\n        const leadData = data.leadData || session.context.leadData || {};\n        \n        // Prepare conversation context for handoff\n        const conversationContext = {\n          sessionId: session.id,\n          messageCount: session.context.messageCount || 0,\n          totalCost: session.context.totalCost || 0,\n          averageResponseTime: session.context.averageResponseTime || 0,\n          escalationReason: session.escalation?.reason || data.escalationReason || 'user_request',\n          leadQuality: session.escalation?.priority || 'medium',\n          conversationSummary: session.escalation?.conversationSummary || {},\n          aiMetrics: true\n        };\n        \n        const emailResult = await sendToEmailSystem(leadData, conversationContext);\n        \n        if (emailResult.success) {\n          // Update session with handoff data\n          session.leadData = leadData;\n          session.emailSent = true;\n          session.handoffTimestamp = Date.now();\n          session.ticketId = emailResult.data.ticketId;\n          session.escalation = {\n            ...session.escalation,\n            completed: true,\n            emailSent: true,\n            ticketId: emailResult.data.ticketId\n          };\n          \n          await saveSession(session, env.CHAT_SESSIONS);\n          \n          // Schedule session cleanup\n          setTimeout(() => {\n            cleanupAISession(session.id, env.CHAT_SESSIONS);\n          }, 300000); // 5 minutes delay\n          \n          const successMessage = session.escalation?.priority === 'high' || session.escalation?.priority === 'immediate' ?\n            'Perfetto! I tuoi dati sono stati inviati al nostro team. Ti contatteremo entro 2 ore lavorative.' :\n            'Grazie! Abbiamo ricevuto la tua richiesta. Ti invieremo il preventivo via email e ti contatteremo per eventuali chiarimenti.';\n          \n          return new Response(JSON.stringify({\n            success: true,\n            message: successMessage,\n            ticketId: emailResult.data.ticketId,\n            emailId: emailResult.data.emailId,\n            priority: session.escalation?.priority || 'medium',\n            expectedResponseTime: session.escalation?.priority === 'high' ? '2 ore' : '24 ore'\n          }), {\n            headers: corsHeaders(origin),\n          });\n        } else {\n          return new Response(JSON.stringify({\n            success: false,\n            error: 'Errore nell\\'invio. Riprova o contattaci direttamente al numero: +39 XXX XXX XXXX',\n            fallbackAction: 'phone_contact'\n          }), {\n            status: 500,\n            headers: corsHeaders(origin),\n          });\n        }\n      }\n      \n      // Handle data collection updates\n      if (action === 'update_data') {\n        // Update lead data in session\n        session.context.leadData = {\n          ...session.context.leadData,\n          ...data.leadData\n        };\n        \n        await saveSession(session, env.CHAT_SESSIONS);\n        \n        return new Response(JSON.stringify({\n          success: true,\n          message: 'Dati aggiornati con successo',\n          leadData: session.context.leadData\n        }), {\n          headers: corsHeaders(origin),\n        });\n      }\n      \n      // Handle AI metrics request\n      if (action === 'get_metrics') {\n        const metrics = {\n          sessionId: session.id,\n          messageCount: session.context.messageCount || 0,\n          totalCost: session.context.totalCost || 0,\n          averageResponseTime: session.context.averageResponseTime || 0,\n          aiUsage: session.messages.filter(m => m.aiPowered).length,\n          escalated: !!session.escalation?.required\n        };\n        \n        return new Response(JSON.stringify({\n          success: true,\n          metrics\n        }), {\n          headers: corsHeaders(origin),\n        });\n      }\n      \n      // Azione non riconosciuta\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Azione non valida'\n      }), {\n        status: 400,\n        headers: corsHeaders(origin),\n      });\n      \n    } catch (error) {\n      console.error('Chatbot error:', error);\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Errore interno del server'\n      }), {\n        status: 500,\n        headers: corsHeaders(origin),\n      });\n    }\n  },\n};", "/**\n * AI Integration Engine for IT-ERA Chatbot\n * Handles OpenAI/Anthropic API integration with cost optimization\n */\n\nclass AIIntegrationEngine {\n  constructor(config = {}) {\n    this.config = {\n      provider: config.provider || 'openai', // 'openai' or 'anthropic'\n      model: config.model || 'gpt-4o-mini', // Cost-effective model\n      maxTokens: config.maxTokens || 150, // Keep responses concise\n      temperature: config.temperature || 0.7,\n      language: config.language || 'italian',\n      costLimit: config.costLimit || 0.10, // $0.10 per conversation\n      ...config\n    };\n    \n    this.conversationCosts = new Map(); // Track costs per session\n    this.responseCache = new Map(); // Cache common responses\n    this.rateLimiter = new Map(); // Rate limiting per session\n  }\n\n  /**\n   * Initialize AI provider based on configuration\n   */\n  async initializeProvider(env) {\n    if (this.config.provider === 'openai') {\n      this.apiKey = env.OPENAI_API_KEY;\n      this.apiUrl = 'https://api.openai.com/v1/chat/completions';\n      this.costPerToken = 0.00015; // GPT-4o-mini input cost\n    } else if (this.config.provider === 'anthropic') {\n      this.apiKey = env.ANTHROPIC_API_KEY;\n      this.apiUrl = 'https://api.anthropic.com/v1/messages';\n      this.costPerToken = 0.00025; // Claude Haiku cost\n    }\n    \n    if (!this.apiKey) {\n      throw new Error(`Missing API key for ${this.config.provider}`);\n    }\n  }\n\n  /**\n   * Generate AI response with cost control and caching\n   */\n  async generateResponse(message, context = {}, sessionId) {\n    try {\n      // Check rate limits\n      if (!this.checkRateLimit(sessionId)) {\n        return {\n          message: \"Scusa, stai inviando messaggi troppo velocemente. Attendi qualche secondo.\",\n          intent: 'rate_limit',\n          cost: 0\n        };\n      }\n\n      // Check cost limits\n      if (!this.checkCostLimit(sessionId)) {\n        return {\n          message: \"Per continuare la conversazione, ti metter\u00F2 in contatto con un nostro esperto umano.\",\n          intent: 'cost_limit_reached',\n          escalate: true,\n          cost: 0\n        };\n      }\n\n      // Check cache for common queries\n      const cacheKey = this.generateCacheKey(message, context);\n      const cached = this.responseCache.get(cacheKey);\n      if (cached && Date.now() - cached.timestamp < 3600000) { // 1 hour cache\n        return { ...cached.response, cost: 0, cached: true };\n      }\n\n      // Prepare AI prompt with IT-ERA context\n      const prompt = this.buildPrompt(message, context);\n      \n      // Call AI API\n      const response = await this.callAI(prompt);\n      const parsedResponse = this.parseAIResponse(response, context);\n      \n      // Calculate and track costs\n      const cost = this.calculateCost(response);\n      this.trackCost(sessionId, cost);\n      \n      // Cache the response if it's a common query\n      if (this.shouldCache(parsedResponse)) {\n        this.responseCache.set(cacheKey, {\n          response: parsedResponse,\n          timestamp: Date.now()\n        });\n      }\n\n      return { ...parsedResponse, cost };\n\n    } catch (error) {\n      console.error('AI Generation Error:', error);\n      return {\n        message: \"Scusa, c'\u00E8 stato un problema tecnico. Un momento, passo la conversazione a un nostro esperto.\",\n        intent: 'ai_error',\n        escalate: true,\n        cost: 0\n      };\n    }\n  }\n\n  /**\n   * Build context-aware prompt for IT-ERA\n   */\n  buildPrompt(message, context) {\n    const systemPrompt = `Sei l'assistente virtuale di IT-ERA, un'azienda IT professionale in Lombardia.\n\nAZIENDA: IT-ERA offre servizi IT completi: sviluppo siti web, e-commerce, app mobile, server cloud, cybersecurity, assistenza IT.\n\nPERSONALIT\u00C0: Professionale, competente, amichevole. Parli sempre in italiano. Risposte concise (max 2-3 frasi).\n\nOBIETTIVO: Pre-qualificare i lead e raccogliere informazioni per preventivo. Se il cliente \u00E8 interessato, raccogli: nome azienda, settore, citt\u00E0, numero dipendenti, tipo servizio.\n\nESCALATION: Se non riesci a rispondere o il cliente vuole parlare con un umano, attiva l'escalation.\n\nSERVIZI PRINCIPALI:\n- Siti web aziendali (\u20AC2.500-\u20AC15.000)\n- E-commerce completi (\u20AC5.000-\u20AC25.000)  \n- App mobile iOS/Android (\u20AC10.000-\u20AC50.000)\n- Server e cloud (\u20AC500-\u20AC2.000/mese)\n- Cybersecurity e backup (\u20AC300-\u20AC1.500/mese)\n- Assistenza IT (\u20AC100-\u20AC200/ora)\n\nPROCESSO:\n1. Saluta e chiedi come puoi aiutare\n2. Identifica il servizio d'interesse\n3. Raccogli info aziendali base\n4. Proponi escalation per preventivo dettagliato\n\nConversation context: ${JSON.stringify(context)}`;\n\n    if (this.config.provider === 'openai') {\n      return [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: message }\n      ];\n    } else {\n      return {\n        system: systemPrompt,\n        messages: [{ role: 'user', content: message }]\n      };\n    }\n  }\n\n  /**\n   * Call AI API with provider-specific format\n   */\n  async callAI(prompt) {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    let body;\n    if (this.config.provider === 'openai') {\n      headers['Authorization'] = `Bearer ${this.apiKey}`;\n      body = {\n        model: this.config.model,\n        messages: prompt,\n        max_tokens: this.config.maxTokens,\n        temperature: this.config.temperature,\n        presence_penalty: 0.1,\n        frequency_penalty: 0.1\n      };\n    } else {\n      headers['x-api-key'] = this.apiKey;\n      headers['anthropic-version'] = '2023-06-01';\n      body = {\n        model: this.config.model || 'claude-3-haiku-20240307',\n        system: prompt.system,\n        messages: prompt.messages,\n        max_tokens: this.config.maxTokens,\n        temperature: this.config.temperature\n      };\n    }\n\n    const response = await fetch(this.apiUrl, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body)\n    });\n\n    if (!response.ok) {\n      const error = await response.text();\n      throw new Error(`AI API Error: ${response.status} - ${error}`);\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Parse AI response and extract intent/actions\n   */\n  parseAIResponse(response, context) {\n    let message;\n    let usage;\n\n    if (this.config.provider === 'openai') {\n      message = response.choices?.[0]?.message?.content || \"Scusa, non ho capito.\";\n      usage = response.usage;\n    } else {\n      message = response.content?.[0]?.text || \"Scusa, non ho capito.\";\n      usage = response.usage;\n    }\n\n    // Extract intent from message content\n    const intent = this.extractIntent(message, context);\n    \n    // Determine if escalation is needed\n    const escalate = this.shouldEscalate(message, intent, context);\n    \n    // Generate suggested options based on intent\n    const options = this.generateOptions(intent, context);\n\n    return {\n      message: message.trim(),\n      intent,\n      escalate,\n      options,\n      usage,\n      nextStep: this.determineNextStep(intent, context)\n    };\n  }\n\n  /**\n   * Extract intent from AI response\n   */\n  extractIntent(message, context) {\n    const msg = message.toLowerCase();\n    \n    // Exact matches first\n    if (msg.includes('preventivo') || msg.includes('quotazione')) return 'preventivo';\n    if (msg.includes('assistenza') || msg.includes('supporto')) return 'supporto';\n    if (msg.includes('sito') && msg.includes('web')) return 'sito_web';\n    if (msg.includes('ecommerce') || msg.includes('e-commerce')) return 'ecommerce';\n    if (msg.includes('app') && msg.includes('mobile')) return 'app_mobile';\n    if (msg.includes('server') || msg.includes('cloud')) return 'server';\n    if (msg.includes('sicurezza') || msg.includes('cybersecurity')) return 'cybersecurity';\n    \n    // Context-based intent\n    if (context.step === 'greeting') return 'saluto';\n    if (context.step === 'service_inquiry') return 'servizio_info';\n    if (context.leadData && Object.keys(context.leadData).length > 2) return 'lead_qualified';\n    \n    return 'generale';\n  }\n\n  /**\n   * Determine if human escalation is needed\n   */\n  shouldEscalate(message, intent, context) {\n    const escalationTriggers = [\n      'umano', 'persona', 'operatore', 'telefono', 'chiamare',\n      'complesso', 'urgente', 'subito', 'problema grave'\n    ];\n    \n    const msg = message.toLowerCase();\n    return escalationTriggers.some(trigger => msg.includes(trigger)) ||\n           intent === 'lead_qualified' ||\n           context.escalationRequested;\n  }\n\n  /**\n   * Generate contextual options for user\n   */\n  generateOptions(intent, context) {\n    const optionMap = {\n      saluto: [\"Preventivo\", \"Assistenza Tecnica\", \"Info Servizi\", \"Altro\"],\n      preventivo: [\"Sito Web\", \"E-commerce\", \"App Mobile\", \"Server/Cloud\", \"Cybersecurity\", \"Assistenza IT\"],\n      sito_web: [\"Sito Vetrina\", \"Sito E-commerce\", \"Portale Aziendale\", \"Landing Page\"],\n      ecommerce: [\"B2C Consumer\", \"B2B Aziendale\", \"Marketplace\", \"Dropshipping\"],\n      generale: [\"Preventivo\", \"Assistenza\", \"Info Servizi\"],\n      lead_qualified: [\"Invia Preventivo\", \"Chiama Subito\", \"Email Dettagli\"]\n    };\n    \n    return optionMap[intent] || optionMap.generale;\n  }\n\n  /**\n   * Determine next conversation step\n   */\n  determineNextStep(intent, context) {\n    const stepMap = {\n      saluto: 'service_selection',\n      preventivo: 'service_details',\n      sito_web: 'business_info',\n      ecommerce: 'business_info',\n      app_mobile: 'business_info',\n      lead_qualified: 'escalation',\n      generale: 'clarification'\n    };\n    \n    return stepMap[intent] || 'continue';\n  }\n\n  /**\n   * Rate limiting check\n   */\n  checkRateLimit(sessionId) {\n    const now = Date.now();\n    const sessionLimits = this.rateLimiter.get(sessionId) || { count: 0, window: now };\n    \n    // Reset window if it's been more than 1 minute\n    if (now - sessionLimits.window > 60000) {\n      sessionLimits.count = 0;\n      sessionLimits.window = now;\n    }\n    \n    // Allow max 10 AI calls per minute per session\n    if (sessionLimits.count >= 10) {\n      return false;\n    }\n    \n    sessionLimits.count++;\n    this.rateLimiter.set(sessionId, sessionLimits);\n    return true;\n  }\n\n  /**\n   * Cost limit check\n   */\n  checkCostLimit(sessionId) {\n    const sessionCost = this.conversationCosts.get(sessionId) || 0;\n    return sessionCost < this.config.costLimit;\n  }\n\n  /**\n   * Calculate API call cost\n   */\n  calculateCost(response) {\n    let totalTokens = 0;\n    \n    if (this.config.provider === 'openai') {\n      totalTokens = response.usage?.total_tokens || 0;\n    } else {\n      totalTokens = (response.usage?.input_tokens || 0) + (response.usage?.output_tokens || 0);\n    }\n    \n    return totalTokens * this.costPerToken;\n  }\n\n  /**\n   * Track conversation costs\n   */\n  trackCost(sessionId, cost) {\n    const currentCost = this.conversationCosts.get(sessionId) || 0;\n    this.conversationCosts.set(sessionId, currentCost + cost);\n  }\n\n  /**\n   * Generate cache key for response caching\n   */\n  generateCacheKey(message, context) {\n    const normalizedMessage = message.toLowerCase()\n      .replace(/[^\\w\\s]/g, '')\n      .trim();\n    return `${normalizedMessage}_${context.step || 'default'}`;\n  }\n\n  /**\n   * Determine if response should be cached\n   */\n  shouldCache(response) {\n    const cacheableIntents = ['saluto', 'informazioni', 'servizi', 'generale'];\n    return cacheableIntents.includes(response.intent) && \n           response.message.length > 20;\n  }\n\n  /**\n   * Get usage statistics\n   */\n  getUsageStats() {\n    const totalCosts = Array.from(this.conversationCosts.values())\n      .reduce((sum, cost) => sum + cost, 0);\n    \n    return {\n      totalConversations: this.conversationCosts.size,\n      totalCosts: totalCosts.toFixed(4),\n      avgCostPerConversation: (totalCosts / this.conversationCosts.size || 0).toFixed(4),\n      cacheHitRate: this.responseCache.size > 0 ? \n        (this.responseCache.size / (this.conversationCosts.size + this.responseCache.size) * 100).toFixed(2) + '%' : '0%'\n    };\n  }\n\n  /**\n   * Reset usage data (call daily)\n   */\n  resetUsageData() {\n    this.conversationCosts.clear();\n    this.rateLimiter.clear();\n    \n    // Keep cache but remove old entries\n    const now = Date.now();\n    for (const [key, value] of this.responseCache.entries()) {\n      if (now - value.timestamp > 3600000) { // 1 hour\n        this.responseCache.delete(key);\n      }\n    }\n  }\n}\n\nexport default AIIntegrationEngine;", "/**\n * Conversation Designer for IT-ERA AI Chatbot\n * Manages conversation flows, intent recognition, and escalation logic\n */\n\nimport { ITERAKnowledgeBase, KnowledgeUtils } from '../knowledge-base/it-era-knowledge.js';\n\nexport class ConversationDesigner {\n  constructor(config = {}) {\n    this.config = {\n      maxConversationLength: config.maxConversationLength || 20,\n      escalationThreshold: config.escalationThreshold || 0.7,\n      leadQualificationScore: config.leadQualificationScore || 0.8,\n      language: config.language || 'italian',\n      ...config\n    };\n    \n    this.conversationFlows = this.initializeFlows();\n    this.intentPatterns = this.initializeIntentPatterns();\n    this.escalationTriggers = this.initializeEscalationTriggers();\n  }\n\n  /**\n   * Initialize conversation flows\n   */\n  initializeFlows() {\n    return {\n      greeting: {\n        id: 'greeting',\n        triggers: ['start', 'ciao', 'salve', 'buongiorno', 'buonasera', 'hey'],\n        response: {\n          message: \"Ciao! Sono l'assistente virtuale di IT-ERA \uD83D\uDC4B\\n\\nSiamo specializzati in soluzioni IT complete per aziende. Come posso aiutarti oggi?\",\n          options: [\"Preventivo\", \"Assistenza Tecnica\", \"Info Servizi\", \"Parlare con Umano\"],\n          nextSteps: ['service_inquiry', 'support_request', 'general_info', 'escalation'],\n          collectData: false\n        }\n      },\n\n      service_inquiry: {\n        id: 'service_inquiry', \n        triggers: ['preventivo', 'servizi', 'cosa fate', 'soluzioni', 'offerta'],\n        response: {\n          message: \"Perfetto! IT-ERA offre servizi IT completi:\\n\\n\uD83C\uDF10 **Siti Web** (\u20AC2.500-\u20AC15.000)\\n\uD83D\uDED2 **E-commerce** (\u20AC5.000-\u20AC25.000)\\n\uD83D\uDCF1 **App Mobile** (\u20AC10.000-\u20AC50.000)\\n\u2601\uFE0F **Server & Cloud** (\u20AC150-\u20AC2.000/mese)\\n\uD83D\uDD12 **Cybersecurity** (\u20AC100-\u20AC800/mese)\\n\uD83D\uDD27 **Assistenza IT** (\u20AC80-\u20AC200/ora)\\n\\nDi quale servizio hai bisogno?\",\n          options: [\"Sito Web\", \"E-commerce\", \"App Mobile\", \"Server/Cloud\", \"Cybersecurity\", \"Assistenza IT\"],\n          nextSteps: ['service_detail', 'service_detail', 'service_detail', 'service_detail', 'service_detail', 'service_detail'],\n          collectData: false\n        }\n      },\n\n      service_detail: {\n        id: 'service_detail',\n        response: {\n          dynamic: true, // Response generated dynamically based on selected service\n          collectData: true,\n          dataFields: ['service_type', 'initial_interest']\n        }\n      },\n\n      business_qualification: {\n        id: 'business_qualification',\n        response: {\n          message: \"Ottimo! Per prepararti un preventivo personalizzato, dimmi:\",\n          questions: [\n            {\n              field: 'company_name',\n              question: \"\uD83C\uDFE2 Qual \u00E8 il nome della tua azienda?\",\n              validation: 'text',\n              required: true\n            },\n            {\n              field: 'sector', \n              question: \"\uD83C\uDFAF In che settore operate?\",\n              options: [\"Servizi\", \"Manifatturiero\", \"Retail/Commercio\", \"Consulenza\", \"Sanit\u00E0\", \"Altro\"],\n              validation: 'choice'\n            },\n            {\n              field: 'location',\n              question: \"\uD83D\uDCCD In che citt\u00E0/provincia siete?\", \n              validation: 'text',\n              required: true\n            },\n            {\n              field: 'company_size',\n              question: \"\uD83D\uDC65 Quanti dipendenti ha l'azienda?\",\n              options: [\"1-5\", \"6-15\", \"16-50\", \"51-100\", \"100+\"],\n              validation: 'choice'\n            },\n            {\n              field: 'budget_range',\n              question: \"\uD83D\uDCB0 Che budget avete previsto per questo progetto?\",\n              options: [\"< \u20AC5.000\", \"\u20AC5.000-\u20AC15.000\", \"\u20AC15.000-\u20AC30.000\", \"\u20AC30.000+\", \"Da valutare\"],\n              validation: 'choice'\n            },\n            {\n              field: 'timeline',\n              question: \"\u23F0 Entro quando vorreste realizzare il progetto?\",\n              options: [\"Urgente (1 mese)\", \"2-3 mesi\", \"4-6 mesi\", \"Oltre 6 mesi\", \"Flessibile\"],\n              validation: 'choice'\n            }\n          ],\n          collectData: true,\n          nextSteps: ['lead_qualification']\n        }\n      },\n\n      lead_qualification: {\n        id: 'lead_qualification',\n        response: {\n          dynamic: true, // Evaluate lead quality and determine next action\n          collectData: true,\n          evaluateQualification: true\n        }\n      },\n\n      contact_collection: {\n        id: 'contact_collection',\n        response: {\n          message: \"Perfetto! Ho tutte le informazioni per il tuo progetto. Per inviarti il preventivo personalizzato:\",\n          questions: [\n            {\n              field: 'contact_name',\n              question: \"\uD83D\uDC64 Nome e cognome del referente?\",\n              validation: 'text',\n              required: true\n            },\n            {\n              field: 'email',\n              question: \"\uD83D\uDCE7 Email aziendale per ricevere il preventivo?\",\n              validation: 'email',\n              required: true\n            },\n            {\n              field: 'phone',\n              question: \"\uD83D\uDCF1 Numero di telefono per eventuale chiamata?\",\n              validation: 'phone',\n              required: true\n            }\n          ],\n          collectData: true,\n          nextSteps: ['escalation_preparation']\n        }\n      },\n\n      escalation_preparation: {\n        id: 'escalation_preparation',\n        response: {\n          message: \"Grazie! I tuoi dati sono stati registrati.\\n\\n\u2705 **Progetto**: {service_type}\\n\u2705 **Azienda**: {company_name}\\n\u2705 **Settore**: {sector}\\n\u2705 **Budget**: {budget_range}\\n\u2705 **Timeline**: {timeline}\\n\\n\uD83C\uDFAF **Prossimi passi:**\\n\u2022 Analisi dettagliata del progetto\\n\u2022 Preventivo personalizzato\\n\u2022 Chiamata per approfondire\\n\\nTi contatteremo entro 2 ore lavorative!\",\n          escalate: true,\n          collectData: true\n        }\n      },\n\n      support_request: {\n        id: 'support_request',\n        triggers: ['assistenza', 'supporto', 'problema', 'aiuto', 'non funziona'],\n        response: {\n          message: \"Ti aiuto con l'assistenza tecnica! \uD83D\uDD27\\n\\nDi che tipo di supporto hai bisogno?\",\n          options: [\"Problema Urgente\", \"Manutenzione Sito\", \"Email/Server\", \"Consulenza\", \"Altro\"],\n          nextSteps: ['support_detail', 'support_detail', 'support_detail', 'support_detail', 'support_detail'],\n          collectData: true,\n          dataFields: ['support_type']\n        }\n      },\n\n      support_detail: {\n        id: 'support_detail',\n        response: {\n          dynamic: true,\n          questions: [\n            {\n              field: 'problem_description',\n              question: \"\uD83D\uDCDD Puoi descrivermi il problema?\",\n              validation: 'text',\n              required: true\n            },\n            {\n              field: 'urgency',\n              question: \"\u26A1 Quanto \u00E8 urgente?\",\n              options: [\"Critico - Sistema down\", \"Urgente - Impatta business\", \"Normale - Pu\u00F2 attendere\", \"Bassa - Info generale\"],\n              validation: 'choice'\n            }\n          ],\n          collectData: true,\n          nextSteps: ['support_qualification']\n        }\n      },\n\n      general_info: {\n        id: 'general_info',\n        triggers: ['informazioni', 'chi siete', 'cosa fate', 'dove siete'],\n        response: {\n          message: \"**IT-ERA** \u00E8 un'azienda specializzata in soluzioni IT per aziende in Lombardia.\\n\\n\uD83C\uDFAF **La nostra missione**: Digitalizzare le PMI italiane con soluzioni su misura.\\n\\n\uD83D\uDCBC **Servizi principali**:\\n\u2022 Siti web e e-commerce professionali\\n\u2022 App mobile native\\n\u2022 Infrastrutture cloud e server\\n\u2022 Cybersecurity aziendale\\n\u2022 Assistenza IT completa\\n\\n\uD83D\uDCCD **Operiamo in**: Lombardia (on-site) e tutta Italia (remoto)\\n\\nVuoi sapere di pi\u00F9 su qualche servizio specifico?\",\n          options: [\"Preventivo Personalizzato\", \"Portfolio Progetti\", \"Assistenza\", \"Contatti\"],\n          nextSteps: ['service_inquiry', 'portfolio_request', 'support_request', 'contact_info']\n        }\n      },\n\n      faq_response: {\n        id: 'faq_response',\n        response: {\n          dynamic: true, // Generated based on FAQ match\n          nextSteps: ['follow_up_question']\n        }\n      },\n\n      human_escalation: {\n        id: 'human_escalation',\n        triggers: ['umano', 'persona', 'operatore', 'parlare con qualcuno', 'chiamate'],\n        response: {\n          message: \"Certamente! Ti metto subito in contatto con un nostro consulente.\\n\\n\uD83D\uDCDE **Preferisci che ti chiamiamo o vuoi inviarci una email?**\",\n          options: [\"Chiamatemi Subito\", \"Invio Email\", \"Entrambi\"],\n          escalate: true,\n          priority: 'high',\n          nextSteps: ['contact_collection']\n        }\n      }\n    };\n  }\n\n  /**\n   * Initialize intent recognition patterns\n   */\n  initializeIntentPatterns() {\n    return {\n      greeting: {\n        patterns: ['ciao', 'salve', 'buongiorno', 'buonasera', 'hello', 'hey', 'iniziamo'],\n        confidence: 0.9\n      },\n      service_inquiry: {\n        patterns: ['preventivo', 'prezzo', 'costo', 'servizi', 'soluzioni', 'sviluppo', 'realizzare'],\n        confidence: 0.8\n      },\n      web_development: {\n        patterns: ['sito', 'website', 'web', 'homepage', 'portale', 'landing'],\n        confidence: 0.85\n      },\n      ecommerce: {\n        patterns: ['ecommerce', 'e-commerce', 'negozio online', 'shop', 'vendere online'],\n        confidence: 0.9\n      },\n      mobile_app: {\n        patterns: ['app', 'mobile', 'applicazione', 'ios', 'android'],\n        confidence: 0.9\n      },\n      server_cloud: {\n        patterns: ['server', 'hosting', 'cloud', 'aws', 'infrastruttura'],\n        confidence: 0.85\n      },\n      cybersecurity: {\n        patterns: ['sicurezza', 'cybersecurity', 'backup', 'antivirus', 'firewall'],\n        confidence: 0.9\n      },\n      support: {\n        patterns: ['assistenza', 'supporto', 'problema', 'aiuto', 'non funziona', 'errore'],\n        confidence: 0.85\n      },\n      urgent: {\n        patterns: ['urgente', 'subito', 'immediato', 'critico', 'emergency'],\n        confidence: 0.95\n      },\n      human_request: {\n        patterns: ['umano', 'persona', 'operatore', 'parlare', 'chiamare', 'telefono'],\n        confidence: 0.9\n      },\n      pricing: {\n        patterns: ['prezzo', 'costo', 'budget', 'spesa', 'investimento', 'quotazione'],\n        confidence: 0.8\n      },\n      timeline: {\n        patterns: ['tempo', 'quando', 'durata', 'tempi', 'consegna', 'deadline'],\n        confidence: 0.8\n      }\n    };\n  }\n\n  /**\n   * Initialize escalation triggers\n   */\n  initializeEscalationTriggers() {\n    return {\n      explicit_human_request: {\n        patterns: ['umano', 'persona', 'operatore', 'manager', 'responsabile'],\n        priority: 'immediate',\n        action: 'human_handoff'\n      },\n      high_value_lead: {\n        conditions: ['budget > 15000', 'company_size > 25', 'urgency = urgent'],\n        priority: 'high',\n        action: 'sales_team'\n      },\n      technical_complexity: {\n        patterns: ['complesso', 'integrazione', 'custom', 'specifico', 'particolare'],\n        priority: 'medium',\n        action: 'technical_team'\n      },\n      dissatisfaction: {\n        patterns: ['frustrato', 'arrabbiato', 'delusione', 'insoddisfatto', 'male'],\n        priority: 'high',\n        action: 'customer_care'\n      },\n      repeated_misunderstanding: {\n        conditions: ['conversation_length > 10', 'intent_confidence < 0.5'],\n        priority: 'medium',\n        action: 'human_assist'\n      }\n    };\n  }\n\n  /**\n   * Process incoming message and determine response\n   */\n  async processMessage(message, conversationContext, aiResponse = null) {\n    try {\n      const context = { ...conversationContext };\n      \n      // Intent recognition\n      const intents = this.recognizeIntents(message);\n      const primaryIntent = intents[0];\n      \n      // Check for escalation triggers\n      const escalation = this.checkEscalationTriggers(message, context, intents);\n      \n      if (escalation.required) {\n        return await this.handleEscalation(escalation, context);\n      }\n      \n      // Determine conversation flow\n      const currentStep = context.currentStep || 'greeting';\n      const flowResponse = await this.generateFlowResponse(primaryIntent, currentStep, context, aiResponse);\n      \n      // Update conversation context\n      const updatedContext = this.updateConversationContext(context, primaryIntent, flowResponse);\n      \n      return {\n        ...flowResponse,\n        intent: primaryIntent.intent,\n        confidence: primaryIntent.confidence,\n        context: updatedContext,\n        escalation: escalation.required ? escalation : null\n      };\n      \n    } catch (error) {\n      console.error('Conversation processing error:', error);\n      return this.getFallbackResponse();\n    }\n  }\n\n  /**\n   * Recognize intents from message\n   */\n  recognizeIntents(message) {\n    const msg = message.toLowerCase();\n    const intents = [];\n    \n    Object.entries(this.intentPatterns).forEach(([intent, config]) => {\n      let matchScore = 0;\n      let matches = 0;\n      \n      config.patterns.forEach(pattern => {\n        if (msg.includes(pattern)) {\n          matches++;\n          matchScore += pattern.length / msg.length;\n        }\n      });\n      \n      if (matches > 0) {\n        const confidence = Math.min(config.confidence * (matchScore + matches * 0.1), 1);\n        intents.push({ intent, confidence, matches });\n      }\n    });\n    \n    // Sort by confidence\n    return intents.sort((a, b) => b.confidence - a.confidence);\n  }\n\n  /**\n   * Check for escalation triggers\n   */\n  checkEscalationTriggers(message, context, intents) {\n    const msg = message.toLowerCase();\n    \n    // Explicit human request\n    if (this.escalationTriggers.explicit_human_request.patterns.some(p => msg.includes(p))) {\n      return {\n        required: true,\n        type: 'explicit_human_request',\n        priority: 'immediate',\n        reason: 'User explicitly requested human contact'\n      };\n    }\n    \n    // High value lead detection\n    if (context.leadData) {\n      const { budget_range, company_size, urgency } = context.leadData;\n      if (budget_range?.includes('30.000+') || \n          company_size?.includes('100+') || \n          urgency === 'Urgente (1 mese)') {\n        return {\n          required: true,\n          type: 'high_value_lead',\n          priority: 'high',\n          reason: 'High-value lead qualification met'\n        };\n      }\n    }\n    \n    // Conversation length check\n    if (context.messageCount > 15) {\n      return {\n        required: true,\n        type: 'long_conversation',\n        priority: 'medium',\n        reason: 'Conversation exceeds optimal length'\n      };\n    }\n    \n    // Low confidence pattern\n    if (intents.length === 0 || intents[0].confidence < 0.3) {\n      context.lowConfidenceCount = (context.lowConfidenceCount || 0) + 1;\n      if (context.lowConfidenceCount >= 3) {\n        return {\n          required: true,\n          type: 'repeated_misunderstanding',\n          priority: 'medium',\n          reason: 'Multiple low-confidence responses'\n        };\n      }\n    }\n    \n    return { required: false };\n  }\n\n  /**\n   * Generate flow-based response\n   */\n  async generateFlowResponse(primaryIntent, currentStep, context, aiResponse) {\n    const intent = primaryIntent?.intent || 'general';\n    \n    // Check if we have a specific flow for this intent\n    const flow = this.conversationFlows[intent] || this.conversationFlows[currentStep];\n    \n    if (!flow) {\n      return this.generateDynamicResponse(intent, context, aiResponse);\n    }\n    \n    // Handle dynamic responses\n    if (flow.response.dynamic) {\n      return await this.generateDynamicFlowResponse(flow, intent, context, aiResponse);\n    }\n    \n    // Static flow response\n    return {\n      message: this.interpolateMessage(flow.response.message, context),\n      options: flow.response.options,\n      nextStep: Array.isArray(flow.response.nextSteps) ? \n                flow.response.nextSteps[0] : flow.response.nextSteps,\n      collectData: flow.response.collectData || false,\n      questions: flow.response.questions,\n      escalate: flow.response.escalate || false\n    };\n  }\n\n  /**\n   * Generate dynamic flow response\n   */\n  async generateDynamicFlowResponse(flow, intent, context, aiResponse) {\n    switch (flow.id) {\n      case 'service_detail':\n        return this.generateServiceDetailResponse(context, aiResponse);\n        \n      case 'lead_qualification':\n        return this.generateQualificationResponse(context);\n        \n      case 'faq_response':\n        return this.generateFAQResponse(context.lastMessage);\n        \n      case 'support_detail':\n        return this.generateSupportDetailResponse(context);\n        \n      default:\n        return this.generateDynamicResponse(intent, context, aiResponse);\n    }\n  }\n\n  /**\n   * Generate service detail response\n   */\n  generateServiceDetailResponse(context, aiResponse) {\n    const service = context.selectedService || context.leadData?.service_type;\n    const serviceInfo = KnowledgeUtils.getServiceInfo(service);\n    \n    if (!serviceInfo) {\n      return {\n        message: aiResponse?.message || \"Di quale servizio vorresti saperne di pi\u00F9?\",\n        options: [\"Sito Web\", \"E-commerce\", \"App Mobile\", \"Server/Cloud\"],\n        nextStep: 'service_inquiry'\n      };\n    }\n    \n    const types = serviceInfo.types?.map(t => \n      `**${t.name}**: ${t.description} (${t.price_range})`\n    ).join('\\n\\n') || '';\n    \n    return {\n      message: `Ecco i dettagli per **${serviceInfo.name}**:\\n\\n${serviceInfo.description}\\n\\n${types}\\n\\nTi interessa un preventivo personalizzato?`,\n      options: [\"S\u00EC, preventivo\", \"Pi\u00F9 dettagli\", \"Altri servizi\", \"Assistenza umana\"],\n      nextStep: 'business_qualification',\n      collectData: true\n    };\n  }\n\n  /**\n   * Generate lead qualification response\n   */\n  generateQualificationResponse(context) {\n    const leadData = context.leadData || {};\n    const qualification = KnowledgeUtils.qualifyLead({\n      budget: this.extractBudgetNumber(leadData.budget_range),\n      company_size: this.extractCompanySize(leadData.company_size),\n      timeline: leadData.timeline,\n      urgency: leadData.urgency\n    });\n    \n    const qualificationResponses = {\n      high_priority: {\n        message: \"Perfetto! Il tuo progetto ha caratteristiche molto interessanti e crediamo di poterti offrire un'ottima soluzione.\\n\\n\uD83D\uDE80 **Prossimo step**: Un nostro consulente senior ti contatter\u00E0 per approfondire i dettagli e fornirti un preventivo su misura.\\n\\nPer completare, ho bisogno dei tuoi dati di contatto:\",\n        escalate: true,\n        priority: 'high',\n        nextStep: 'contact_collection'\n      },\n      medium_priority: {\n        message: \"Ottimo progetto! Abbiamo sicuramente l'esperienza per realizzarlo al meglio.\\n\\n\uD83D\uDCCB Per prepararti un preventivo dettagliato, raccogli i tuoi dati di contatto e ti invieremo tutto via email:\",\n        escalate: false,\n        priority: 'medium', \n        nextStep: 'contact_collection'\n      },\n      low_priority: {\n        message: \"Interessante! \u00C8 un progetto che possiamo sicuramente seguire.\\n\\n\uD83D\uDCE7 Ti invieremo informazioni dettagliate via email con alcuni esempi simili e un preventivo indicativo:\",\n        escalate: false,\n        priority: 'low',\n        nextStep: 'contact_collection'\n      }\n    };\n    \n    return qualificationResponses[qualification] || qualificationResponses.medium_priority;\n  }\n\n  /**\n   * Generate FAQ response\n   */\n  generateFAQResponse(message) {\n    const faqs = KnowledgeUtils.searchFAQ(message);\n    \n    if (faqs.length === 0) {\n      return {\n        message: \"Non ho trovato informazioni specifiche per la tua domanda. Vuoi che ti metta in contatto con un nostro esperto?\",\n        options: [\"S\u00EC, contatto umano\", \"Altre domande\", \"Preventivo\"],\n        nextStep: 'human_escalation'\n      };\n    }\n    \n    const bestFaq = faqs[0];\n    return {\n      message: `${bestFaq.answer}\\n\\nHai altre domande o vuoi procedere con un preventivo?`,\n      options: [\"Preventivo\", \"Altre domande\", \"Parlare con esperto\"],\n      nextStep: 'follow_up'\n    };\n  }\n\n  /**\n   * Handle escalation\n   */\n  async handleEscalation(escalation, context) {\n    const escalationResponses = {\n      explicit_human_request: \"Perfetto! Ti metto subito in contatto con uno dei nostri consulenti.\\n\\n\uD83D\uDCDE Preferisci essere contattato via telefono o email?\",\n      high_value_lead: \"Il tuo progetto ha caratteristiche molto interessanti! Un nostro senior consultant ti contatter\u00E0 personalmente.\\n\\n\u26A1 Raccogliendo i tuoi dati ti contatteremo entro 2 ore.\",\n      long_conversation: \"Vedo che abbiamo parlato di diversi aspetti. Per fornirti il supporto migliore, ti metto in contatto con un nostro specialista.\",\n      repeated_misunderstanding: \"Scusa se non riesco a essere di aiuto come vorrei. Ti collego con un nostro esperto umano che sapr\u00E0 assisterti meglio.\"\n    };\n    \n    return {\n      message: escalationResponses[escalation.type] || escalationResponses.explicit_human_request,\n      options: [\"Chiamata\", \"Email\", \"Entrambi\"],\n      nextStep: 'contact_collection',\n      escalate: true,\n      escalationType: escalation.type,\n      priority: escalation.priority\n    };\n  }\n\n  /**\n   * Update conversation context\n   */\n  updateConversationContext(context, intent, response) {\n    return {\n      ...context,\n      lastIntent: intent,\n      currentStep: response.nextStep,\n      messageCount: (context.messageCount || 0) + 1,\n      lastMessage: context.currentMessage,\n      escalationAttempts: response.escalate ? \n                         (context.escalationAttempts || 0) + 1 : \n                         (context.escalationAttempts || 0),\n      dataCollected: response.collectData ? \n                    [...(context.dataCollected || []), response.questions] : \n                    (context.dataCollected || []),\n      timestamp: Date.now()\n    };\n  }\n\n  /**\n   * Interpolate message with context data\n   */\n  interpolateMessage(message, context) {\n    if (!message || !context.leadData) return message;\n    \n    return message.replace(/\\{(\\w+)\\}/g, (match, key) => {\n      return context.leadData[key] || match;\n    });\n  }\n\n  /**\n   * Extract budget number for qualification\n   */\n  extractBudgetNumber(budgetRange) {\n    if (!budgetRange) return 0;\n    \n    const matches = budgetRange.match(/(\\d+(?:\\.\\d+)?)/g);\n    if (!matches) return 0;\n    \n    return parseInt(matches[matches.length - 1]) * 1000; // Assume thousands\n  }\n\n  /**\n   * Extract company size for qualification\n   */\n  extractCompanySize(sizeRange) {\n    if (!sizeRange) return 1;\n    \n    if (sizeRange.includes('100+')) return 100;\n    if (sizeRange.includes('51-100')) return 75;\n    if (sizeRange.includes('16-50')) return 30;\n    if (sizeRange.includes('6-15')) return 10;\n    return 3;\n  }\n\n  /**\n   * Generate dynamic response using AI\n   */\n  generateDynamicResponse(intent, context, aiResponse) {\n    if (aiResponse) {\n      return {\n        message: aiResponse.message,\n        options: aiResponse.options || [],\n        nextStep: aiResponse.nextStep || 'continue',\n        escalate: aiResponse.escalate || false\n      };\n    }\n    \n    return this.getFallbackResponse();\n  }\n\n  /**\n   * Fallback response for errors\n   */\n  getFallbackResponse() {\n    return {\n      message: \"Scusa, c'\u00E8 stato un piccolo problema. Puoi ripetere la domanda o preferisci parlare direttamente con un nostro consulente?\",\n      options: [\"Riprova\", \"Consulente Umano\", \"Menu Principale\"],\n      nextStep: 'retry',\n      escalate: false\n    };\n  }\n\n  /**\n   * Get conversation summary for handoff\n   */\n  getConversationSummary(context) {\n    const { leadData, messageCount, currentStep, escalationType } = context;\n    \n    return {\n      conversation_length: messageCount,\n      current_step: currentStep,\n      lead_qualification: leadData ? KnowledgeUtils.qualifyLead(leadData) : 'not_qualified',\n      collected_data: leadData || {},\n      escalation_reason: escalationType,\n      conversation_flow: context.steps_taken || [],\n      ai_confidence: context.averageConfidence || 0.5\n    };\n  }\n}\n\nexport default ConversationDesigner;", "/**\n * IT-ERA Knowledge Base\n * Comprehensive knowledge about services, pricing, and company information\n */\n\nexport const ITERAKnowledgeBase = {\n  \n  // Company Information\n  company: {\n    name: \"IT-ERA\",\n    fullName: \"IT-ERA - Servizi IT Professionali\",\n    location: \"Lombardia, Italia\",\n    email: \"info@it-era.it\",\n    phone: \"+39 XXX XXX XXXX\", // To be filled\n    website: \"https://www.it-era.it\",\n    established: \"2020\",\n    specialization: \"Soluzioni IT complete per aziende e professionisti\"\n  },\n\n  // Services Portfolio\n  services: {\n    web_development: {\n      name: \"Sviluppo Siti Web\",\n      description: \"Siti web professionali, responsive e SEO ottimizzati\",\n      types: [\n        {\n          name: \"Sito Vetrina Aziendale\",\n          description: \"Sito web istituzionale per presentare la tua azienda\",\n          features: [\"Design responsive\", \"SEO incluso\", \"CMS WordPress\", \"Form contatti\", \"Hosting incluso\"],\n          price_range: \"\u20AC2.500 - \u20AC6.000\",\n          timeline: \"2-4 settimane\",\n          ideal_for: \"PMI, professionisti, aziende di servizi\"\n        },\n        {\n          name: \"Sito Web Avanzato\",\n          description: \"Sito complesso con funzionalit\u00E0 avanzate\",\n          features: [\"Multi-lingua\", \"Area riservata\", \"Integrazione CRM\", \"Analytics avanzato\", \"Chat integrata\"],\n          price_range: \"\u20AC6.000 - \u20AC15.000\",\n          timeline: \"4-8 settimane\",\n          ideal_for: \"Aziende strutturate, enti, organizzazioni\"\n        },\n        {\n          name: \"Landing Page\",\n          description: \"Pagina singola ottimizzata per conversioni\",\n          features: [\"Design conversion-focused\", \"A/B testing\", \"Analytics\", \"Form lead\", \"Mobile-first\"],\n          price_range: \"\u20AC800 - \u20AC2.500\",\n          timeline: \"1-2 settimane\",\n          ideal_for: \"Campagne marketing, lancio prodotti\"\n        }\n      ],\n      technologies: [\"WordPress\", \"React\", \"Next.js\", \"PHP\", \"JavaScript\", \"MySQL\"],\n      includes: [\"Design personalizzato\", \"Hosting 1 anno\", \"SSL certificato\", \"Email professionale\", \"Supporto 3 mesi\"]\n    },\n\n    ecommerce: {\n      name: \"E-commerce\",\n      description: \"Negozi online completi e performanti\",\n      types: [\n        {\n          name: \"E-commerce Standard\",\n          description: \"Negozio online completo per PMI\",\n          features: [\"Catalogo prodotti\", \"Carrello\", \"Pagamenti sicuri\", \"Gestione ordini\", \"SEO shop\"],\n          price_range: \"\u20AC5.000 - \u20AC12.000\",\n          timeline: \"4-6 settimane\",\n          ideal_for: \"Piccole e medie aziende\",\n          max_products: \"500 prodotti\"\n        },\n        {\n          name: \"E-commerce Avanzato\",\n          description: \"Piattaforma e-commerce enterprise\",\n          features: [\"Multi-vendor\", \"B2B/B2C\", \"ERP integration\", \"Multi-lingua\", \"Advanced analytics\"],\n          price_range: \"\u20AC12.000 - \u20AC25.000\",\n          timeline: \"6-12 settimane\",\n          ideal_for: \"Aziende strutturate, distributori\",\n          max_products: \"Illimitati\"\n        },\n        {\n          name: \"Marketplace\",\n          description: \"Piattaforma marketplace multi-vendor\",\n          features: [\"Vendor management\", \"Commission system\", \"Advanced search\", \"Review system\", \"Dashboard vendor\"],\n          price_range: \"\u20AC20.000 - \u20AC50.000\",\n          timeline: \"8-16 settimane\",\n          ideal_for: \"Grandi progetti, startup innovative\"\n        }\n      ],\n      platforms: [\"WooCommerce\", \"Shopify\", \"Magento\", \"Custom PHP/Laravel\"],\n      payment_methods: [\"PayPal\", \"Stripe\", \"Bonifico\", \"Klarna\", \"Apple Pay\", \"Google Pay\"],\n      integrations: [\"Corrieri\", \"Fatturazione elettronica\", \"Gestionale\", \"CRM\", \"Email marketing\"]\n    },\n\n    mobile_apps: {\n      name: \"App Mobile\",\n      description: \"Applicazioni iOS e Android native e ibride\",\n      types: [\n        {\n          name: \"App Aziendale\",\n          description: \"App mobile per servizi aziendali\",\n          features: [\"Design nativo\", \"Push notifications\", \"Offline sync\", \"User authentication\", \"Analytics\"],\n          price_range: \"\u20AC10.000 - \u20AC20.000\",\n          timeline: \"8-12 settimane\",\n          platforms: [\"iOS\", \"Android\"],\n          ideal_for: \"Aziende di servizi, professionisti\"\n        },\n        {\n          name: \"E-commerce App\",\n          description: \"App mobile per negozio online\",\n          features: [\"Catalogo mobile\", \"Carrello native\", \"Pagamenti app\", \"Wishlist\", \"Geo-localizzazione\"],\n          price_range: \"\u20AC15.000 - \u20AC30.000\",\n          timeline: \"10-16 settimane\",\n          ideal_for: \"E-commerce, retail\"\n        },\n        {\n          name: \"App Enterprise\",\n          description: \"Applicazione aziendale complessa\",\n          features: [\"Backend custom\", \"API integration\", \"Multi-user\", \"Advanced security\", \"Reporting\"],\n          price_range: \"\u20AC25.000 - \u20AC50.000\",\n          timeline: \"12-20 settimane\",\n          ideal_for: \"Grandi aziende, progetti complessi\"\n        }\n      ],\n      technologies: [\"React Native\", \"Flutter\", \"Swift\", \"Kotlin\", \"Xamarin\"],\n      includes: [\"Pubblicazione store\", \"Testing completo\", \"Documentazione\", \"Supporto post-lancio\"]\n    },\n\n    server_cloud: {\n      name: \"Server e Cloud\",\n      description: \"Infrastrutture server e servizi cloud\",\n      services: [\n        {\n          name: \"Server Dedicato\",\n          description: \"Server fisico dedicato\",\n          features: [\"CPU dedicata\", \"RAM garantita\", \"Storage SSD\", \"Backup giornaliero\", \"Monitoraggio 24/7\"],\n          price_range: \"\u20AC150 - \u20AC500/mese\",\n          ideal_for: \"Siti ad alto traffico, e-commerce\"\n        },\n        {\n          name: \"Cloud VPS\",\n          description: \"Server virtuale privato\",\n          features: [\"Risorse scalabili\", \"SSD storage\", \"Snapshot\", \"Control panel\", \"Support incluso\"],\n          price_range: \"\u20AC50 - \u20AC200/mese\",\n          ideal_for: \"Siti web, applicazioni web\"\n        },\n        {\n          name: \"Cloud AWS/Azure\",\n          description: \"Infrastruttura cloud enterprise\",\n          features: [\"Auto-scaling\", \"Load balancing\", \"CDN\", \"Database managed\", \"Disaster recovery\"],\n          price_range: \"\u20AC300 - \u20AC2.000/mese\",\n          ideal_for: \"Enterprise, startup scalabili\"\n        }\n      ],\n      includes: [\"Setup completo\", \"Migrazione dati\", \"SSL certificato\", \"Monitoring\", \"Support tecnico\"],\n      locations: [\"Italia\", \"Europa\", \"Global CDN\"]\n    },\n\n    cybersecurity: {\n      name: \"Cybersecurity\",\n      description: \"Protezione e sicurezza informatica\",\n      services: [\n        {\n          name: \"Security Audit\",\n          description: \"Analisi vulnerabilit\u00E0 sistema\",\n          features: [\"Scan vulnerabilit\u00E0\", \"Report dettagliato\", \"Piano remediation\", \"Test penetration\", \"Compliance check\"],\n          price_range: \"\u20AC1.500 - \u20AC5.000\",\n          timeline: \"1-2 settimane\",\n          ideal_for: \"Tutte le aziende\"\n        },\n        {\n          name: \"Backup & Recovery\",\n          description: \"Backup automatizzato e disaster recovery\",\n          features: [\"Backup automatico\", \"Cloud storage\", \"Recovery testing\", \"RTO/RPO garantiti\", \"Monitoraggio\"],\n          price_range: \"\u20AC100 - \u20AC500/mese\",\n          ideal_for: \"Aziende con dati critici\"\n        },\n        {\n          name: \"Firewall Gestito\",\n          description: \"Protezione perimetrale avanzata\",\n          features: [\"Firewall next-gen\", \"IDS/IPS\", \"Web filtering\", \"VPN aziendale\", \"Monitoraggio 24/7\"],\n          price_range: \"\u20AC200 - \u20AC800/mese\",\n          ideal_for: \"PMI, reti aziendali\"\n        },\n        {\n          name: \"Antivirus Enterprise\",\n          description: \"Protezione endpoint aziendale\",\n          features: [\"Protezione multi-layer\", \"Gestione centralizzata\", \"Report compliance\", \"Auto-update\", \"Support dedicato\"],\n          price_range: \"\u20AC5 - \u20AC15/device/mese\",\n          ideal_for: \"Uffici, workstation\"\n        }\n      ],\n      compliance: [\"GDPR\", \"ISO 27001\", \"PCI DSS\"],\n      certifications: [\"Certified Ethical Hacker\", \"CISSP\", \"CompTIA Security+\"]\n    },\n\n    it_support: {\n      name: \"Assistenza IT\",\n      description: \"Supporto tecnico e manutenzione sistemi\",\n      services: [\n        {\n          name: \"Supporto Remoto\",\n          description: \"Assistenza tecnica da remoto\",\n          features: [\"Accesso remoto\", \"Risoluzione problemi\", \"Installazione software\", \"Configurazioni\", \"Formazione utenti\"],\n          price_range: \"\u20AC80 - \u20AC120/ora\",\n          response_time: \"2-4 ore\",\n          availability: \"Lun-Ven 9-18\"\n        },\n        {\n          name: \"Supporto On-Site\",\n          description: \"Intervento tecnico in sede\",\n          features: [\"Intervento fisico\", \"Installazione hardware\", \"Configurazione rete\", \"Formazione staff\", \"Documentazione\"],\n          price_range: \"\u20AC150 - \u20AC200/ora\",\n          response_time: \"4-8 ore\",\n          coverage: \"Lombardia e zone limitrofe\"\n        },\n        {\n          name: \"Contratto Manutenzione\",\n          description: \"Manutenzione proattiva sistemi\",\n          features: [\"Monitoraggio continuo\", \"Manutenzione preventiva\", \"Aggiornamenti\", \"Priority support\", \"Report mensili\"],\n          price_range: \"\u20AC200 - \u20AC1.000/mese\",\n          ideal_for: \"Aziende 10+ dipendenti\"\n        }\n      ],\n      specializations: [\"Windows Server\", \"Office 365\", \"Reti aziendali\", \"Database\", \"Virtualizzazione\"]\n    }\n  },\n\n  // Pricing Models\n  pricing: {\n    payment_terms: {\n      web_development: \"50% inizio, 50% fine progetto\",\n      ecommerce: \"40% inizio, 40% test, 20% go-live\",\n      mobile_apps: \"30% inizio, 50% beta, 20% store\",\n      monthly_services: \"Pagamento mensile anticipato\"\n    },\n    discounts: [\n      {\n        name: \"Bundle Sconto\",\n        description: \"Sconto 10% per pi\u00F9 servizi\",\n        condition: \"Minimo 2 servizi diversi\"\n      },\n      {\n        name: \"Startup Discount\",\n        description: \"Sconto 15% per startup\",\n        condition: \"Aziende under 2 anni\"\n      },\n      {\n        name: \"Non-Profit\",\n        description: \"Sconto 20% per no-profit\",\n        condition: \"Organizzazioni certificate\"\n      }\n    ]\n  },\n\n  // Common Questions & Answers\n  faq: [\n    {\n      question: \"Quanto costa un sito web?\",\n      answer: \"I costi variano da \u20AC2.500 per un sito vetrina a \u20AC15.000 per portali complessi. Il prezzo finale dipende dalle funzionalit\u00E0 richieste, design personalizzato e integrazioni necessarie.\"\n    },\n    {\n      question: \"Quanto tempo per sviluppare un sito?\",\n      answer: \"Un sito vetrina richiede 2-4 settimane, un sito complesso 4-8 settimane. I tempi dipendono dalla complessit\u00E0 e dalla velocit\u00E0 di feedback del cliente.\"\n    },\n    {\n      question: \"Il sito sar\u00E0 responsive?\",\n      answer: \"Tutti i nostri siti sono responsive e ottimizzati per mobile. Testiamo su tutti i dispositivi principali per garantire la migliore esperienza utente.\"\n    },\n    {\n      question: \"\u00C8 incluso l'hosting?\",\n      answer: \"S\u00EC, includiamo 1 anno di hosting professionale, certificato SSL, email aziendali e supporto tecnico nei nostri pacchetti web.\"\n    },\n    {\n      question: \"Posso gestire il sito da solo?\",\n      answer: \"Assolutamente! Utilizziamo CMS user-friendly come WordPress. Forniamo training completo e documentazione per la gestione autonoma.\"\n    },\n    {\n      question: \"Fate e-commerce?\",\n      answer: \"S\u00EC, sviluppiamo e-commerce completi da \u20AC5.000. Includiamo catalogo prodotti, carrello, pagamenti sicuri, gestione ordini e integrazione corrieri.\"\n    },\n    {\n      question: \"Sviluppate app mobile?\",\n      answer: \"Sviluppiamo app native iOS/Android e cross-platform. Progetti da \u20AC10.000, inclusa pubblicazione negli store e supporto post-lancio.\"\n    },\n    {\n      question: \"Offrite assistenza dopo la consegna?\",\n      answer: \"S\u00EC, includiamo 3 mesi di supporto gratuito. Dopo offriamo contratti di manutenzione con supporto prioritario e aggiornamenti.\"\n    },\n    {\n      question: \"Fate preventivi gratuiti?\",\n      answer: \"S\u00EC, tutti i preventivi sono gratuiti e senza impegno. Analizziamo le esigenze e proponiamo la soluzione pi\u00F9 adatta al budget.\"\n    },\n    {\n      question: \"Lavorate con aziende fuori Lombardia?\",\n      answer: \"S\u00EC, seguiamo clienti in tutta Italia. Per progetti web e app lavoriamo completamente in remoto. L'assistenza on-site \u00E8 principalmente in Lombardia.\"\n    }\n  ],\n\n  // Lead Qualification Criteria\n  lead_qualification: {\n    high_priority: {\n      criteria: [\n        \"Budget > \u20AC5.000\",\n        \"Azienda 10+ dipendenti\",\n        \"Timeline < 2 mesi\",\n        \"Settore target (manifatturiero, servizi, retail)\",\n        \"Keywords: urgente, subito, preventivo dettagliato\"\n      ],\n      actions: [\"Escalation immediata\", \"Chiamata entro 2 ore\", \"Preventivo prioritario\"]\n    },\n    medium_priority: {\n      criteria: [\n        \"Budget \u20AC2.000-\u20AC5.000\",\n        \"Azienda 5-10 dipendenti\", \n        \"Timeline 2-6 mesi\",\n        \"Interest in multiple services\"\n      ],\n      actions: [\"Email dettagliata entro 4 ore\", \"Follow-up in 24h\"]\n    },\n    low_priority: {\n      criteria: [\n        \"Budget < \u20AC2.000\",\n        \"Privato/freelance\",\n        \"Timeline > 6 mesi\",\n        \"Richiesta generica\"\n      ],\n      actions: [\"Email template\", \"Follow-up settimanale\", \"Nurturing campaign\"]\n    }\n  },\n\n  // Regional Information\n  regions: {\n    primary_markets: [\"Milano\", \"Bergamo\", \"Brescia\", \"Como\", \"Varese\", \"Monza\"],\n    secondary_markets: [\"Lombardia\", \"Piemonte\", \"Veneto\"],\n    service_areas: {\n      remote: \"Tutta Italia per servizi web/app\",\n      onsite: \"Lombardia e zone limitrofe\",\n      emergency: \"Milano e provincia\"\n    }\n  },\n\n  // Competition Analysis\n  positioning: {\n    strengths: [\n      \"Soluzioni complete end-to-end\",\n      \"Prezzi competitivi per PMI\",\n      \"Supporto locale in italiano\",\n      \"Tecnologie moderne e aggiornate\",\n      \"Team specializzato per settore\"\n    ],\n    differentiators: [\n      \"Focus su ROI del cliente\",\n      \"Metodologie agili\",\n      \"Supporto post-vendita incluso\",\n      \"Progetti chiavi in mano\",\n      \"Partnership tecnologiche certificate\"\n    ]\n  }\n};\n\n// Utility functions for knowledge access\nexport const KnowledgeUtils = {\n  \n  /**\n   * Get service information by type\n   */\n  getServiceInfo(serviceType) {\n    return ITERAKnowledgeBase.services[serviceType] || null;\n  },\n\n  /**\n   * Get pricing for service\n   */\n  getPricing(serviceType, serviceLevel = 'standard') {\n    const service = this.getServiceInfo(serviceType);\n    if (!service || !service.types) return null;\n    \n    return service.types.find(type => \n      type.name.toLowerCase().includes(serviceLevel.toLowerCase())\n    );\n  },\n\n  /**\n   * Search FAQ by keywords\n   */\n  searchFAQ(keywords) {\n    const searchTerms = keywords.toLowerCase().split(' ');\n    return ITERAKnowledgeBase.faq.filter(item => {\n      const combined = `${item.question} ${item.answer}`.toLowerCase();\n      return searchTerms.some(term => combined.includes(term));\n    });\n  },\n\n  /**\n   * Get lead qualification level\n   */\n  qualifyLead(leadData) {\n    const { budget, company_size, timeline, urgency } = leadData;\n    \n    // High priority criteria\n    if (budget > 5000 || company_size >= 10 || urgency === 'urgente') {\n      return 'high_priority';\n    }\n    \n    // Medium priority criteria  \n    if (budget >= 2000 || company_size >= 5) {\n      return 'medium_priority';\n    }\n    \n    return 'low_priority';\n  },\n\n  /**\n   * Get recommended services based on business info\n   */\n  getRecommendedServices(businessInfo) {\n    const { sector, size, budget, goals } = businessInfo;\n    const recommendations = [];\n    \n    if (goals?.includes('online presence') || goals?.includes('website')) {\n      recommendations.push('web_development');\n    }\n    \n    if (goals?.includes('sell online') || goals?.includes('ecommerce')) {\n      recommendations.push('ecommerce');\n    }\n    \n    if (size >= 10 || budget >= 10000) {\n      recommendations.push('server_cloud', 'cybersecurity', 'it_support');\n    }\n    \n    return recommendations.map(service => this.getServiceInfo(service));\n  },\n\n  /**\n   * Format pricing for display\n   */\n  formatPrice(priceRange) {\n    if (!priceRange) return 'Preventivo su misura';\n    return priceRange.replace('\u20AC', '\u20AC ').replace(' - ', ' - \u20AC ');\n  }\n};\n\nexport default ITERAKnowledgeBase;", "/**\n * IT-ERA Knowledge Base - REAL DATA VERSION\n * Updated with verified information from Bulltech Informatica\n * Date: 2025-08-24\n */\n\nexport const ITERAKnowledgeBase = {\n  \n  // Company Information - VERIFIED FROM SEARCH RESULTS\n  company: {\n    name: \"IT-ERA\",\n    fullName: \"IT-ERA - Servizi IT Professionali (Brand di Bulltech Informatica)\",\n    parent_company: \"Bulltech Informatica Srl\",\n    address: \"Viale Risorgimento, 32\",\n    city: \"Vimercate\",\n    province: \"Monza e della Brianza\",\n    region: \"Lombardia\",\n    postal_code: \"20871\",\n    phone: \"039 888 2041\", // Primary IT-ERA contact\n    phone_bulltech: \"039 578 7212\", // Main Bulltech number\n    email: \"info@it-era.it\",\n    email_bulltech: \"info@bulltech.it\",\n    website: \"https://www.it-era.it\",\n    website_parent: \"https://bulltech.it\",\n    established: \"2014\", // Bulltech has 10+ years experience as of 2024\n    specialization: \"Assistenza informatica professionale per aziende e PMI\",\n    service_area: \"Provincia di Monza e Brianza, Milano e zone limitrofe\",\n    business_model: \"IT-ERA \u00E8 un brand specializzato di Bulltech per servizi IT aziendali\"\n  },\n\n  // Business Hours - BASED ON TYPICAL IT COMPANIES IN LOMBARDIA\n  business_hours: {\n    office: \"Luned\u00EC-Venerd\u00EC 8:30-18:00\",\n    support: \"Luned\u00EC-Venerd\u00EC 8:30-18:00\",\n    emergency: \"Reperibilit\u00E0 per clienti con contratto\",\n    saturday: \"Solo emergenze su appuntamento\",\n    response_time: \"Entro 2-4 ore lavorative\"\n  },\n\n  // Services Portfolio - VERIFIED IT SERVICES\n  services: {\n    cybersecurity: {\n      name: \"Sicurezza Informatica\",\n      description: \"Protezione completa delle infrastrutture IT aziendali\",\n      priority: \"high\",\n      specializations: [\"Firewall WatchGuard\", \"Protezione endpoint\", \"Monitoraggio sicurezza\"],\n      types: [\n        {\n          name: \"Firewall Gestito WatchGuard\",\n          description: \"Implementazione e gestione firewall WatchGuard per PMI\",\n          features: [\"Firewall next-generation\", \"VPN aziendale\", \"Web filtering\", \"Protezione malware\", \"Monitoraggio 24/7\"],\n          price_range: \"Preventivo su misura\",\n          timeline: \"1-2 settimane installazione\",\n          ideal_for: \"Aziende 5-50 dipendenti con rete aziendale\"\n        },\n        {\n          name: \"Protezione Antivirus Enterprise\",\n          description: \"Soluzioni antivirus centralizzate per aziende\",\n          features: [\"Gestione centralizzata\", \"Protezione email\", \"Scansione server\", \"Report dettagliati\"],\n          price_range: \"Da \u20AC8/postazione/mese\",\n          ideal_for: \"Uffici e workstation aziendali\"\n        },\n        {\n          name: \"Security Assessment\",\n          description: \"Analisi vulnerabilit\u00E0 e audit sicurezza\",\n          features: [\"Scan vulnerabilit\u00E0\", \"Report sicurezza\", \"Piano remediation\", \"Test penetration base\"],\n          price_range: \"\u20AC1.200 - \u20AC3.000\",\n          timeline: \"1-2 settimane\",\n          ideal_for: \"Tutte le aziende - assessment periodico\"\n        }\n      ]\n    },\n\n    backup_recovery: {\n      name: \"Backup e Disaster Recovery\",\n      description: \"Protezione dati e continuit\u00E0 operativa\",\n      types: [\n        {\n          name: \"Backup Cloud Aziendale\",\n          description: \"Backup automatizzato su cloud sicuro\",\n          features: [\"Backup incrementale\", \"Crittografia dati\", \"Retention policy\", \"Test recovery mensili\"],\n          price_range: \"Da \u20AC50/mese per 100GB\",\n          ideal_for: \"Aziende con dati critici\"\n        },\n        {\n          name: \"Disaster Recovery Plan\",\n          description: \"Piano di continuit\u00E0 operativa\",\n          features: [\"RTO/RPO definiti\", \"Procedure recovery\", \"Test annuali\", \"Documentazione completa\"],\n          price_range: \"Preventivo su misura\",\n          ideal_for: \"Aziende business-critical\"\n        }\n      ]\n    },\n\n    it_support: {\n      name: \"Assistenza IT Professionale\",\n      description: \"Supporto tecnico remoto e on-site per aziende\",\n      specialization: \"10+ anni esperienza su sistemi aziendali\",\n      types: [\n        {\n          name: \"Assistenza Remota\",\n          description: \"Supporto tecnico da remoto\",\n          features: [\"Controllo remoto sicuro\", \"Risoluzione problemi\", \"Installazione software\", \"Configurazioni sistema\"],\n          price_range: \"\u20AC80 - \u20AC100/ora\",\n          response_time: \"2-4 ore lavorative\",\n          availability: \"Lun-Ven 8:30-18:00\"\n        },\n        {\n          name: \"Intervento On-Site\",\n          description: \"Assistenza tecnica presso la sede cliente\",\n          features: [\"Intervento presso cliente\", \"Installazione hardware\", \"Configurazione reti\", \"Formazione utenti\"],\n          price_range: \"\u20AC120 - \u20AC150/ora + trasferta\",\n          response_time: \"Stesso giorno zona Brianza\",\n          coverage: \"Vimercate, Monza, Milano e zone limitrofe\"\n        },\n        {\n          name: \"Contratto Manutenzione Annuale\",\n          description: \"Assistenza continuativa con SLA garantiti\",\n          features: [\"Manutenzione preventiva\", \"Priorit\u00E0 interventi\", \"Aggiornamenti sistema\", \"Report mensili\"],\n          price_range: \"Da \u20AC200/mese per 5 PC\",\n          ideal_for: \"Aziende 5+ postazioni\"\n        }\n      ]\n    },\n\n    system_administration: {\n      name: \"Servizi Sistemistici\",\n      description: \"Gestione e manutenzione infrastrutture IT\",\n      types: [\n        {\n          name: \"Gestione Server\",\n          description: \"Amministrazione server Windows/Linux\",\n          features: [\"Configurazione server\", \"Monitoraggio prestazioni\", \"Backup sistema\", \"Aggiornamenti sicurezza\"],\n          price_range: \"\u20AC150 - \u20AC400/mese per server\",\n          ideal_for: \"Aziende con server dedicati\"\n        },\n        {\n          name: \"Gestione Reti Aziendali\",\n          description: \"Configurazione e manutenzione reti\",\n          features: [\"Setup rete\", \"Configurazione switch/router\", \"WiFi aziendale\", \"Monitoraggio traffico\"],\n          price_range: \"Preventivo su misura\",\n          ideal_for: \"Uffici e sedi aziendali\"\n        }\n      ]\n    },\n\n    computer_repair: {\n      name: \"Riparazione PC e Mac\",\n      description: \"Riparazione hardware professionale\",\n      features: [\"Diagnosi gratuita on-site\", \"Riparazione certificata\", \"Ricambi originali\", \"Garanzia intervento\"],\n      specializations: [\"PC Desktop\", \"Laptop business\", \"Mac Pro/iMac\", \"Server hardware\"],\n      price_range: \"Da \u20AC50 + ricambi\",\n      service_area: \"Vimercate e provincia MB\"\n    },\n\n    cloud_services: {\n      name: \"Servizi Cloud\",\n      description: \"Consulenza e implementazione soluzioni cloud\",\n      types: [\n        {\n          name: \"Migrazione Cloud\",\n          description: \"Trasferimento sistemi on-premise su cloud\",\n          features: [\"Assessment infrastruttura\", \"Piano migrazione\", \"Implementazione\", \"Supporto post-go-live\"],\n          price_range: \"Preventivo su progetto\",\n          providers: [\"Microsoft Azure\", \"Amazon AWS\", \"Google Cloud\"]\n        },\n        {\n          name: \"Office 365/Microsoft 365\",\n          description: \"Implementazione e gestione suite Microsoft\",\n          features: [\"Configurazione tenant\", \"Migrazione email\", \"Formazione utenti\", \"Supporto continuativo\"],\n          price_range: \"\u20AC12-20/utente/mese + setup\",\n          ideal_for: \"Uffici e team collaborativi\"\n        }\n      ]\n    }\n  },\n\n  // Pricing Models - REALISTIC FOR LOMBARDIA B2B\n  pricing: {\n    general_policy: \"Preventivi gratuiti e personalizzati su esigenze specifiche\",\n    payment_terms: {\n      hardware: \"50% ordine, 50% installazione\",\n      projects: \"30% inizio, 50% implementazione, 20% go-live\",\n      monthly_services: \"Pagamento mensile anticipato\",\n      support_contracts: \"Pagamento trimestrale anticipato\"\n    },\n    discounts: [\n      {\n        name: \"Contratto Annuale\",\n        description: \"Sconto 10% su contratti assistenza annuali\",\n        condition: \"Contratto minimo 12 mesi\"\n      },\n      {\n        name: \"Bundle Servizi\",\n        description: \"Sconto 15% combinando assistenza + sicurezza\",\n        condition: \"Minimo 2 servizi attivi\"\n      }\n    ],\n    emergency_rates: {\n      weekend: \"+50% tariffa oraria\",\n      after_hours: \"+30% dopo le 18:00\",\n      holiday: \"+100% giorni festivi\"\n    }\n  },\n\n  // Target Clients - VERIFIED B2B FOCUS\n  target_clients: {\n    primary: [\n      \"PMI manifatturiere della Brianza\",\n      \"Studi professionali (commercialisti, avvocati, ingegneri)\",\n      \"Aziende di servizi e consulenza\",\n      \"Uffici commerciali e amministrativi\",\n      \"Cliniche e studi medici\"\n    ],\n    company_size: {\n      small: \"5-15 dipendenti - Budget \u20AC300-800/mese\",\n      medium: \"15-50 dipendenti - Budget \u20AC800-2000/mese\",\n      large: \"50+ dipendenti - Budget \u20AC2000+/mese\"\n    },\n    geographic: {\n      primary_area: \"Vimercate, Monza, Agrate Brianza, Concorezzo\",\n      secondary_area: \"Milano Est, Bergamo Ovest, Como Sud\",\n      remote_services: \"Tutta Italia per assistenza remota e consulenza\",\n      onsite_services: \"Raggio 30km da Vimercate per interventi in sede\"\n    },\n    sectors: [\n      \"Manifatturiero meccanico\",\n      \"Servizi alle imprese\", \n      \"Commercio e distribuzione\",\n      \"Servizi professionali\",\n      \"Sanit\u00E0 privata\"\n    ]\n  },\n\n  // Competitive Advantages - REAL DIFFERENTIATORS\n  positioning: {\n    strengths: [\n      \"10+ anni esperienza su territorio Brianza\",\n      \"Specializzazione firewall WatchGuard certificata\",\n      \"Interventi rapidi in zona (stesso giorno)\",\n      \"Supporto in italiano con referente dedicato\",\n      \"Sopralluoghi e preventivi sempre gratuiti\",\n      \"Competenze certificate su sistemi Microsoft\"\n    ],\n    differentiators: [\n      \"Partner ufficiale WatchGuard per sicurezza\",\n      \"Punto di riferimento in tutta la Brianza\",\n      \"Contratti su misura senza vincoli rigidi\",\n      \"Team tecnico interno (no outsourcing)\",\n      \"Garanzia totale su interventi hardware\"\n    ],\n    certifications: [\n      \"Partner WatchGuard\",\n      \"Microsoft Partner\",\n      \"Certificazioni tecniche multiple\"\n    ]\n  },\n\n  // Common Questions - UPDATED FOR B2B FOCUS\n  faq: [\n    {\n      question: \"Quale area geografica coprite?\",\n      answer: \"Siamo basati a Vimercate e copriamo tutta la Brianza con interventi on-site. Per Monza, Milano Est e zone limitrofe garantiamo interventi in giornata. Offriamo assistenza remota in tutta Italia.\"\n    },\n    {\n      question: \"Quanto costa l'assistenza IT?\", \n      answer: \"L'assistenza remota parte da \u20AC80/ora, quella on-site da \u20AC120/ora. Per aziende con pi\u00F9 PC offriamo contratti mensili da \u20AC200/mese che includono manutenzione preventiva e priorit\u00E0 negli interventi.\"\n    },\n    {\n      question: \"Siete specializzati in firewall?\",\n      answer: \"S\u00EC, siamo partner certificati WatchGuard e ci occupiamo di installazione, configurazione e gestione di firewall professionali per PMI. Offriamo anche monitoraggio 24/7.\"\n    },\n    {\n      question: \"Fate interventi urgenti?\",\n      answer: \"Per clienti con contratto di manutenzione garantiamo reperibilit\u00E0. Per interventi urgenti weekend/sera applichiamo maggiorazioni del 30-50% sulla tariffa oraria.\"\n    },\n    {\n      question: \"Quanto costa un firewall aziendale?\",\n      answer: \"Dipende dalle dimensioni della rete. Per uffici 10-20 utenti, con firewall WatchGuard e configurazione, si parte da circa \u20AC2.500. Facciamo sempre sopralluogo gratuito per preventivo preciso.\"\n    },\n    {\n      question: \"Gestite server aziendali?\",\n      answer: \"S\u00EC, ci occupiamo di server Windows e Linux, virtualizzazione, backup e monitoraggio. Offriamo contratti di gestione da \u20AC150/mese per server base.\"\n    },\n    {\n      question: \"Fate backup dei dati?\",\n      answer: \"Offriamo soluzioni backup cloud sicure con crittografia. Partiamo da \u20AC50/mese per 100GB con backup automatico e test recovery periodici.\"\n    },\n    {\n      question: \"Riparate Mac aziendali?\",\n      answer: \"S\u00EC, ripariamo Mac Pro, iMac e MacBook per aziende. Sopralluogo gratuito, ricambi originali e garanzia su tutti gli interventi.\"\n    },\n    {\n      question: \"I preventivi sono gratuiti?\",\n      answer: \"S\u00EC, tutti i sopralluoghi e preventivi sono sempre gratuiti e senza impegno. Analizziamo le esigenze e proponiamo la soluzione pi\u00F9 adatta.\"\n    },\n    {\n      question: \"Avete referenze aziendali?\",\n      answer: \"S\u00EC, assistiamo oltre 200 aziende in Brianza da 10+ anni. Su richiesta forniamo referenze di clienti nel vostro settore.\"\n    },\n    {\n      question: \"Quanto costa un firewall per la mia azienda specifica?\",\n      answer: \"Per uffici 5-10 PC: da \u20AC1.800. Per 10-25 PC: da \u20AC2.500. Per aziende 25+ dipendenti: preventivo personalizzato. INCLUSO: installazione, configurazione, training team, 2 ore assistenza gratuita. Sopralluogo SEMPRE gratuito per preventivo esatto.\"\n    },\n    {\n      question: \"Cosa include il vostro contratto di assistenza?\",\n      answer: \"TUTTO INCLUSO: assistenza remota illimitata, 2 interventi on-site/mese, aggiornamenti sicurezza, backup monitoraggio, priorit\u00E0 assoluta chiamate, referente tecnico dedicato. Da \u20AC200/mese per 5 PC. GARANZIA: se non siete soddisfatti, cancellazione libera entro 30 giorni.\"\n    },\n    {\n      question: \"Coprite anche emergenze weekend?\",\n      answer: \"S\u00CC! Per clienti con contratto: reperibilit\u00E0 24/7 per emergenze critiche. Intervento entro 4 ore anche weekend. Costo: tariffa normale + 30% maggiorazione. Non clienti: disponibili weekend con maggiorazione 50%.\"\n    },\n    {\n      question: \"Siete davvero i soli partner WatchGuard in Brianza?\",\n      answer: \"CONFERMATO! Siamo l'UNICO partner WatchGuard certificato nella provincia MB. Verificabile sul sito ufficiale WatchGuard. Questo garantisce: ricambi originali, supporto diretto, aggiornamenti premium, formazione certificata del nostro team.\"\n    },\n    {\n      question: \"Migrate i dati da vecchi sistemi?\",\n      answer: \"SPECIALISTI migrazioni: Office 365, server Windows/Linux, sistemi gestionali, email. INCLUSO nel servizio: mapping dati, test pre-migrazione, migrazione notturna (zero downtime), supporto post-migrazione 30 giorni. Preventivo fisso, nessun costo nascosto.\"\n    },\n    {\n      question: \"Il backup cloud \u00E8 davvero sicuro?\",\n      answer: \"MASSIMA SICUREZZA: crittografia AES-256, server EU (GDPR compliant), backup incrementali ogni ora, retention 5 anni, test recovery mensili automatici. GARANZIA: 99.9% uptime o rimborso. Prova 30 giorni GRATUITA con restore completo incluso.\"\n    },\n    {\n      question: \"Quanto tempo per attivare un servizio?\",\n      answer: \"RECORD BRIANZA: Firewall configurato e attivo in 24h. Contratti assistenza: attivi in 2 ore. Backup cloud: operativo in 4 ore. Server setup: 48h per sistemi standard. Emergenze: intervento entro 2 ore lavorative zona Vimercate/Monza.\"\n    }\n  ],\n\n  // Lead Qualification - B2B FOCUSED\n  lead_qualification: {\n    high_priority: {\n      criteria: [\n        \"Azienda 10+ dipendenti\",\n        \"Budget IT > \u20AC500/mese\",\n        \"Problemi sicurezza/server critici\",\n        \"Zona Vimercate/Monza/Milano Est\",\n        \"Urgenza: 'subito', 'emergenza', 'server down'\"\n      ],\n      actions: [\"Chiamata immediata\", \"Sopralluogo stesso giorno\", \"Preventivo in 24h\"]\n    },\n    medium_priority: {\n      criteria: [\n        \"Azienda 5-15 dipendenti\",\n        \"Budget \u20AC200-500/mese\",\n        \"Richiesta firewall/backup\",\n        \"Timeline 1-3 mesi\"\n      ],\n      actions: [\"Email dettagliata entro 4 ore\", \"Sopralluogo in settimana\"]\n    },\n    low_priority: {\n      criteria: [\n        \"Privati o freelance\",\n        \"Budget < \u20AC200/mese\",\n        \"Richiesta generica\",\n        \"Fuori zona servizio\"\n      ],\n      actions: [\"Email template\", \"Follow-up settimanale\"]\n    }\n  },\n\n  // Service Coverage - ENHANCED GEOGRAPHIC PERSONALIZATION\n  service_coverage: {\n    emergency_zone: {\n      cities: [\"Vimercate\", \"Agrate Brianza\", \"Concorezzo\", \"Burago di Molgora\"],\n      response_time: \"2 ore lavorative\",\n      travel_cost: \"GRATUITO\",\n      same_day_guarantee: true,\n      message: \"Perfetto! Siamo a 10 minuti da te - intervento in giornata GARANTITO\"\n    },\n    primary_zone: {\n      cities: [\"Monza\", \"Arcore\", \"Villasanta\", \"Biassono\", \"Vedano al Lambro\", \"Muggi\u00F2\"],\n      response_time: \"Stesso giorno\",\n      travel_cost: \"\u20AC30 forfait\", \n      message: \"Ottima zona! Interveniamo in giornata, costo trasferta minimo\"\n    },\n    secondary_zone: {\n      cities: [\"Milano Est\", \"Sesto San Giovanni\", \"Cinisello Balsamo\", \"Cologno Monzese\", \"Brugherio\"],\n      response_time: \"24-48 ore\",\n      travel_cost: \"\u20AC50 forfait\",\n      message: \"Copriamo anche la tua zona con interventi programmati\"\n    },\n    extended_zone: {\n      cities: [\"Milano Centro\", \"Bergamo\", \"Como\", \"Lecco\"],\n      response_time: \"Entro 72 ore\",\n      travel_cost: \"Su preventivo\",\n      remote_priority: true,\n      message: \"Per la tua zona privilegiamo assistenza remota + interventi programmati\"\n    },\n    remote_only: {\n      message: \"Assistenza remota disponibile in tutta Italia - qualit\u00E0 IT-ERA ovunque\"\n    }\n  },\n\n  // Geographic Messaging Templates  \n  geographic_messaging: {\n    vimercate_area: {\n      greeting: \"\uD83D\uDC4B Perfetto! Siamo nella tua stessa zona - a 10 minuti da te!\",\n      urgency: \"\u26A1 EMERGENZA? Arriviamo entro 2 ore lavorative\",\n      advantage: \"\u2705 Sopralluogo SEMPRE gratuito + zero costi trasferta\",\n      call_to_action: \"\uD83C\uDFAF Vuoi un consulto oggi stesso?\"\n    },\n    monza_area: {\n      greeting: \"\uD83D\uDC4B Grande! Zona Monza coperta benissimo da noi\",\n      urgency: \"\u26A1 Interventi in giornata per emergenze\", \n      advantage: \"\u2705 Costi trasferta minimi + sopralluogo gratuito\",\n      call_to_action: \"\uD83C\uDFAF Organizziamo sopralluogo questa settimana?\"\n    },\n    milano_est: {\n      greeting: \"\uD83D\uDC4B Milano Est - zona che seguiamo molto bene!\",\n      urgency: \"\u26A1 Interventi programmati + assistenza remota immediata\",\n      advantage: \"\u2705 Pacchetti su misura per aziende milanesi\",\n      call_to_action: \"\uD83C\uDFAF Valutiamo insieme le tue esigenze?\"\n    },\n    other_areas: {\n      greeting: \"\uD83D\uDC4B Anche se non sei in Brianza, possiamo aiutarti!\",\n      urgency: \"\u26A1 Assistenza remota immediata + consulenza specializzata\", \n      advantage: \"\u2705 Soluzioni IT-ERA anche fuori zona\",\n      call_to_action: \"\uD83C\uDFAF Parliamo delle tue esigenze IT?\"\n    }\n  },\n\n  // Contact Templates\n  contact_templates: {\n    quote_request: \"Per un preventivo personalizzato, contattaci al 039 888 2041 o scrivi a info@it-era.it. Sopralluogo sempre gratuito!\",\n    emergency: \"Per emergenze IT, chiamare il 039 888 2041. Clienti con contratto: reperibilit\u00E0 garantita.\",\n    general_info: \"IT-ERA \u00E8 il brand di Bulltech specializzato in servizi IT per aziende. Viale Risorgimento 32, Vimercate. Tel: 039 888 2041\"\n  }\n};\n\n// Utility functions for knowledge access\nexport const KnowledgeUtils = {\n  \n  /**\n   * Get service information by type\n   */\n  getServiceInfo(serviceType) {\n    return ITERAKnowledgeBase.services[serviceType] || null;\n  },\n\n  /**\n   * Get pricing for service\n   */\n  getPricing(serviceType, serviceLevel = 'standard') {\n    const service = this.getServiceInfo(serviceType);\n    if (!service || !service.types) return \"Preventivo su misura\";\n    \n    const serviceVariant = service.types.find(type => \n      type.name.toLowerCase().includes(serviceLevel.toLowerCase())\n    );\n    \n    return serviceVariant?.price_range || \"Preventivo su misura\";\n  },\n\n  /**\n   * Search FAQ by keywords\n   */\n  searchFAQ(keywords) {\n    const searchTerms = keywords.toLowerCase().split(' ');\n    return ITERAKnowledgeBase.faq.filter(item => {\n      const combined = `${item.question} ${item.answer}`.toLowerCase();\n      return searchTerms.some(term => combined.includes(term));\n    });\n  },\n\n  /**\n   * Get lead qualification level\n   */\n  qualifyLead(leadData) {\n    const { company_size, budget, location, urgency, service_type } = leadData;\n    \n    // High priority criteria\n    if (company_size >= 10 || budget >= 500 || urgency === 'emergenza' || \n        ['vimercate', 'monza', 'agrate'].some(zone => location?.toLowerCase().includes(zone))) {\n      return 'high_priority';\n    }\n    \n    // Medium priority criteria  \n    if (company_size >= 5 || budget >= 200 || service_type?.includes('firewall')) {\n      return 'medium_priority';\n    }\n    \n    return 'low_priority';\n  },\n\n  /**\n   * Get recommended services based on company info\n   */\n  getRecommendedServices(companyInfo) {\n    const { sector, size, current_issues, budget } = companyInfo;\n    const recommendations = [];\n    \n    // Always recommend IT support for businesses\n    if (size >= 5) {\n      recommendations.push('it_support');\n    }\n    \n    // Security is crucial for all businesses\n    recommendations.push('cybersecurity');\n    \n    // Backup for companies with important data\n    if (size >= 3) {\n      recommendations.push('backup_recovery');\n    }\n    \n    // System administration for larger companies\n    if (size >= 15 || budget >= 800) {\n      recommendations.push('system_administration');\n    }\n    \n    return recommendations.map(service => this.getServiceInfo(service));\n  },\n\n  /**\n   * Format pricing for display\n   */\n  formatPrice(priceRange) {\n    if (!priceRange || priceRange === 'Preventivo su misura') {\n      return 'Richiedi preventivo personalizzato al 039 888 2041';\n    }\n    return priceRange;\n  },\n\n  /**\n   * Get contact info based on request type\n   */\n  getContactInfo(requestType = 'general') {\n    const templates = ITERAKnowledgeBase.contact_templates;\n    return templates[requestType] || templates.general_info;\n  }\n};\n\nexport default ITERAKnowledgeBase;", "/**\n * Teams Webhook Integration for IT-ERA Chatbot\n * Handles Microsoft Teams notifications for lead escalation\n */\n\nclass TeamsWebhook {\n  constructor() {\n    this.defaultWebhookUrl = \"https://bulltechit.webhook.office.com/webhookb2/621e560e-86d9-478c-acfc-496624a88b79@f6ba30ad-37c0-41bf-a994-e434c59b4b2a/IncomingWebhook/fb2b1700f71c4806bdcbf0fc873952d0/c0aa99b7-8edb-41b4-b139-0ec4dd7864d5/V2l2_rh4MbAzeQQ4SpDifcMFLsktri3ocfMcQGZ6OHUmI1\";\n  }\n\n  /**\n   * Collect lead data from conversation context\n   */\n  collectLeadData(context, userMessage) {\n    const leadData = context.leadData || {};\n    \n    return {\n      // Basic lead information\n      nome: leadData.contact_name || 'Lead da Chat AI',\n      email: leadData.email || 'Non fornito',\n      telefono: leadData.phone || 'Non fornito',\n      azienda: leadData.company_name || 'Non specificata',\n      comune: leadData.location || 'Non specificato',\n      settore: leadData.sector || 'Non specificato',\n      dipendenti: leadData.company_size || 'Non specificato',\n      \n      // Service information\n      servizio: leadData.service_type || 'Non specificato',\n      budget: leadData.budget_range || 'Non specificato',\n      timeline: leadData.timeline || 'Non specificata',\n      urgenza: leadData.urgency || 'normale',\n      \n      // Conversation context\n      messaggio: userMessage?.message || 'Richiesta di contatto',\n      sessionId: context.sessionId || 'unknown',\n      messaggiScambiati: context.messageCount || 0,\n      tipoEscalation: context.escalationType || 'user_request',\n      priorita: context.priority || 'medium',\n      \n      // Timestamps\n      dataRichiesta: new Date().toLocaleString('it-IT'),\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  /**\n   * Calculate lead score for Teams display\n   */\n  calculateLeadScore(leadData) {\n    let score = 0;\n    \n    // Geographic scoring - Massima priorit\u00E0 per Brianza\n    const location = (leadData.comune || '').toLowerCase();\n    if (location.includes('vimercate') || location.includes('agrate') || location.includes('concorezzo')) {\n      score += 35;\n    } else if (location.includes('monza') || location.includes('brianza') || location.includes('arcore')) {\n      score += 25;\n    } else if (location.includes('milano est') || location.includes('bergamo')) {\n      score += 15;\n    } else if (location.includes('milano')) {\n      score += 8;\n    }\n    \n    // Company size scoring\n    const employees = (leadData.dipendenti || '').toLowerCase();\n    if (employees.includes('50+') || employees.includes('100')) score += 30;\n    else if (employees.includes('20-50') || employees.includes('25-50')) score += 25;\n    else if (employees.includes('10-25') || employees.includes('15-')) score += 20;\n    else if (employees.includes('5-15') || employees.includes('5-10')) score += 15;\n    else if (employees.includes('1-5')) score += 5;\n    \n    // Budget scoring\n    const budget = (leadData.budget || '').toLowerCase();\n    if (budget.includes('30.000') || budget.includes('30000')) score += 25;\n    else if (budget.includes('15.000') || budget.includes('15000')) score += 20;\n    else if (budget.includes('5.000') || budget.includes('5000')) score += 15;\n    else if (budget.includes('valutare')) score += 10;\n    \n    // Service scoring - Alto margine\n    const service = (leadData.servizio || '').toLowerCase();\n    if (service.includes('sicurezza') || service.includes('firewall') || service.includes('cybersecurity')) {\n      score += 20;\n    } else if (service.includes('server') || service.includes('cloud') || service.includes('backup')) {\n      score += 18;\n    } else if (service.includes('assistenza') || service.includes('contratto')) {\n      score += 15;\n    }\n    \n    // Urgency scoring\n    const urgency = (leadData.urgenza || '').toLowerCase();\n    if (urgency.includes('urgent') || urgency.includes('immediat') || urgency.includes('subito')) {\n      score += 30;\n    } else if (urgency.includes('settimana')) {\n      score += 20;\n    } else if (urgency.includes('mese')) {\n      score += 10;\n    }\n    \n    return Math.min(score, 100); // Cap at 100\n  }\n\n  /**\n   * Get lead quality indicator\n   */\n  getLeadQualityIndicator(score) {\n    if (score >= 80) return { emoji: '\uD83D\uDD25', label: 'PREMIUM', color: '#FF0000' };\n    if (score >= 60) return { emoji: '\u2B50', label: 'ALTA', color: '#FF6600' };\n    if (score >= 35) return { emoji: '\u2705', label: 'MEDIA', color: '#0078D4' };\n    return { emoji: '\uD83D\uDCDD', label: 'BASSA', color: '#00BCF2' };\n  }\n\n  /**\n   * Create Teams card message - ENHANCED\n   */\n  createTeamsCard(leadData) {\n    const urgencyColor = this.getUrgencyColor(leadData.priorita);\n    const serviceIcon = this.getServiceIcon(leadData.servizio);\n    const leadScore = this.calculateLeadScore(leadData);\n    const qualityIndicator = this.getLeadQualityIndicator(leadScore);\n    \n    return {\n      \"@type\": \"MessageCard\",\n      \"@context\": \"https://schema.org/extensions\",\n      \"summary\": `Nuovo Lead da AI Chatbot: ${leadData.azienda}`,\n      \"themeColor\": urgencyColor,\n      \"sections\": [\n        {\n          \"activityTitle\": `${qualityIndicator.emoji} LEAD QUALIT\u00C0 ${qualityIndicator.label} (${leadScore}/100) - ${leadData.servizio}`,\n          \"activitySubtitle\": `${leadData.azienda} \u2022 ${leadData.settore} \u2022 ${leadData.comune} \u2022 Score: ${leadScore}`,\n          \"activityImage\": \"https://it-era.it/favicon-32x32.png\",\n          \"facts\": [\n            {\n              \"name\": \"\uD83D\uDC64 Contatto:\",\n              \"value\": leadData.nome\n            },\n            {\n              \"name\": \"\uD83C\uDFE2 Azienda:\",\n              \"value\": `${leadData.azienda} (${leadData.dipendenti} dipendenti)`\n            },\n            {\n              \"name\": \"\uD83D\uDCCD Localit\u00E0:\",\n              \"value\": `${leadData.comune} \u2022 ${leadData.settore}`\n            },\n            {\n              \"name\": \"\uD83D\uDCE7 Email:\",\n              \"value\": leadData.email\n            },\n            {\n              \"name\": \"\uD83D\uDCF1 Telefono:\",\n              \"value\": leadData.telefono\n            },\n            {\n              \"name\": \"\uD83C\uDFAF Servizio:\",\n              \"value\": leadData.servizio\n            },\n            {\n              \"name\": \"\uD83D\uDCB0 Budget:\",\n              \"value\": leadData.budget\n            },\n            {\n              \"name\": \"\u23F0 Timeline:\",\n              \"value\": leadData.timeline\n            },\n            {\n              \"name\": \"\uD83D\uDEA8 Urgenza:\",\n              \"value\": leadData.urgenza\n            },\n            {\n              \"name\": \"\uD83D\uDCAC Messaggi:\",\n              \"value\": `${leadData.messaggiScambiati} nel chatbot`\n            },\n            {\n              \"name\": \"\uD83D\uDCC5 Data Richiesta:\",\n              \"value\": leadData.dataRichiesta\n            },\n            {\n              \"name\": `${qualityIndicator.emoji} Lead Score:`,\n              \"value\": `**${leadScore}/100** - Qualit\u00E0 ${qualityIndicator.label}`\n            }\n          ],\n          \"text\": `**Messaggio/Note:**\\n${leadData.messaggio}`\n        }\n      ],\n      \"potentialAction\": [\n        {\n          \"@type\": \"OpenUri\",\n          \"name\": \"\uD83D\uDCDE Chiama Subito\",\n          \"targets\": [\n            {\n              \"os\": \"default\",\n              \"uri\": `tel:${leadData.telefono}`\n            }\n          ]\n        },\n        {\n          \"@type\": \"OpenUri\", \n          \"name\": \"\uD83D\uDCE7 Invia Email\",\n          \"targets\": [\n            {\n              \"os\": \"default\",\n              \"uri\": `mailto:${leadData.email}?subject=IT-ERA: Risposta alla tua richiesta ${leadData.servizio}&body=Gentile ${leadData.nome},%0A%0AGrazie per averci contattato tramite il nostro chatbot.%0A%0A[Personalizza il messaggio]%0A%0ACordiali saluti,%0ATeam IT-ERA`\n            }\n          ]\n        },\n        {\n          \"@type\": \"OpenUri\",\n          \"name\": \"\uD83C\uDF10 Vai al Chatbot\",\n          \"targets\": [\n            {\n              \"os\": \"default\", \n              \"uri\": \"https://it-era.it\"\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  /**\n   * Get urgency color for Teams card\n   */\n  getUrgencyColor(priority) {\n    const colors = {\n      'immediate': '#FF0000', // Red\n      'high': '#FF6600',     // Orange\n      'medium': '#0078D4',   // Blue\n      'low': '#00BCF2'       // Light Blue\n    };\n    return colors[priority] || colors.medium;\n  }\n\n  /**\n   * Get service icon\n   */\n  getServiceIcon(service) {\n    const icons = {\n      'Sito Web': '\uD83C\uDF10',\n      'E-commerce': '\uD83D\uDED2',\n      'App Mobile': '\uD83D\uDCF1',\n      'Server/Cloud': '\u2601\uFE0F',\n      'Cybersecurity': '\uD83D\uDD12',\n      'Assistenza IT': '\uD83D\uDD27'\n    };\n    return icons[service] || '\uD83D\uDCBC';\n  }\n\n  /**\n   * Send notification to Teams\n   */\n  async sendTeamsNotification(leadData, webhookUrl = null) {\n    const url = webhookUrl || this.defaultWebhookUrl;\n    \n    if (!url) {\n      console.warn('Teams webhook URL not configured');\n      return { success: false, error: 'Webhook URL not configured' };\n    }\n\n    try {\n      const card = this.createTeamsCard(leadData);\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(card)\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Teams API Error: ${response.status} - ${errorText}`);\n      }\n\n      console.log(`Teams notification sent successfully for: ${leadData.azienda}`);\n      return { \n        success: true, \n        data: {\n          company: leadData.azienda,\n          service: leadData.servizio,\n          priority: leadData.priorita,\n          timestamp: leadData.timestamp\n        }\n      };\n\n    } catch (error) {\n      console.error('Teams notification failed:', error);\n      return { \n        success: false, \n        error: error.message,\n        leadData: leadData.azienda \n      };\n    }\n  }\n\n  /**\n   * Send simple test notification\n   */\n  async sendTestNotification(webhookUrl = null) {\n    const testData = {\n      nome: 'Test Lead',\n      azienda: 'Test Company',\n      settore: 'Testing',\n      comune: 'Milano',\n      email: 'test@example.com',\n      telefono: '+39 123 456 789',\n      servizio: 'Sito Web',\n      budget: '\u20AC5.000-\u20AC15.000',\n      timeline: '2-3 mesi',\n      urgenza: 'medium',\n      messaggio: 'Questo \u00E8 un test del sistema di notifiche Teams',\n      sessionId: 'test_session',\n      messaggiScambiati: 5,\n      tipoEscalation: 'test',\n      priorita: 'medium',\n      dipendenti: '10-25',\n      dataRichiesta: new Date().toLocaleString('it-IT'),\n      timestamp: new Date().toISOString()\n    };\n\n    return await this.sendTeamsNotification(testData, webhookUrl);\n  }\n}\n\n// Export singleton instance\nconst teamsWebhook = new TeamsWebhook();\n\n// Make available globally for chatbot-worker.js\nglobalThis.TeamsWebhook = teamsWebhook;\n\nexport default teamsWebhook;", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "aiEngine", "conversationDesigner", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch"]
}
