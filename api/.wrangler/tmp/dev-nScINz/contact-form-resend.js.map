{
  "version": 3,
  "sources": ["../bundle-QW707U/checked-fetch.js", "../bundle-QW707U/middleware-loader.entry.ts", "wrangler-modules-watch:wrangler:modules-watch", "../bundle-QW707U/middleware-insertion-facade.js", "../../../contact-form-resend.js", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/dev-nScINz",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/bundle-QW707U/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/andreapanzeri/progetti/IT-ERA/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/bundle-QW707U/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/andreapanzeri/progetti/IT-ERA/api/.wrangler/tmp/bundle-QW707U/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/andreapanzeri/progetti/IT-ERA/api/contact-form-resend.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/andreapanzeri/progetti/IT-ERA/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/andreapanzeri/progetti/IT-ERA/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/andreapanzeri/progetti/IT-ERA/api/contact-form-resend.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "/**\n * Cloudflare Worker - Sistema Email IT-ERA con Resend\n * Documentazione: https://resend.com/docs/send-with-nodejs\n */\n\nconst CONFIG = {\n  // Email settings\n  EMAIL_TO: 'andrea@bulltech.it',\n  EMAIL_TO_TEST: 'codeagent087@gmail.com', // Per test mode Resend (temporaneo)\n  EMAIL_FROM: 'info@it-era.it', // Usare dopo verifica dominio\n  EMAIL_FROM_FALLBACK: 'onboarding@resend.dev', // Fallback se dominio non verificato\n  EMAIL_FROM_NAME: 'IT-ERA',\n  EMAIL_REPLY_TO: 'info@it-era.it',\n  EMAIL_SUBJECT_PREFIX: '[IT-ERA]',\n  \n  // Rate limiting\n  RATE_LIMIT_REQUESTS: 95, // Resend free: 100/giorno, lasciamo margine\n  RATE_LIMIT_WINDOW: 86400, // 24 ore in secondi\n  \n  // CORS\n  ALLOWED_ORIGINS: [\n    'https://www.it-era.it',\n    'https://it-era.it',\n    'https://it-era.pages.dev',\n    'http://localhost:8788',\n    'http://localhost:3000',\n    'http://127.0.0.1:5500'\n  ],\n};\n\nconst corsHeaders = (origin) => ({\n  'Access-Control-Allow-Origin': CONFIG.ALLOWED_ORIGINS.includes(origin) ? origin : CONFIG.ALLOWED_ORIGINS[0],\n  'Access-Control-Allow-Methods': 'POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type',\n  'Content-Type': 'application/json',\n});\n\nfunction isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nfunction isValidPhone(phone) {\n  const phoneRegex = /^(\\+39)?[\\s]?[0-9]{3,4}[\\s]?[0-9]{6,7}$/;\n  return phoneRegex.test(phone.replace(/\\s/g, ''));\n}\n\nfunction sanitizeInput(input) {\n  if (typeof input !== 'string') return '';\n  return input.trim().replace(/[<>]/g, '').substring(0, 1000);\n}\n\nasync function checkRateLimit(ip, KV) {\n  if (!KV) return true; // Se KV non \u00E8 configurato, permetti sempre\n  \n  const key = `ratelimit:${ip}`;\n  const current = await KV.get(key);\n  \n  if (current) {\n    const count = parseInt(current);\n    if (count >= CONFIG.RATE_LIMIT_REQUESTS) {\n      return false;\n    }\n    await KV.put(key, String(count + 1), { expirationTtl: CONFIG.RATE_LIMIT_WINDOW });\n  } else {\n    await KV.put(key, '1', { expirationTtl: CONFIG.RATE_LIMIT_WINDOW });\n  }\n  \n  return true;\n}\n\n// Invio email con Resend API\nasync function sendEmailResend(data, env) {\n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Segoe UI', Arial, sans-serif; background-color: #f4f4f4;\">\n  <div style=\"max-width: 600px; margin: 0 auto; background-color: #ffffff;\">\n    <!-- Header -->\n    <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; text-align: center;\">\n      <h1 style=\"color: white; margin: 0; font-size: 28px; font-weight: 600;\">\n        IT-ERA\n      </h1>\n      <p style=\"color: rgba(255,255,255,0.9); margin: 10px 0 0 0; font-size: 14px;\">\n        Nuova richiesta dal sito web\n      </p>\n    </div>\n    \n    <!-- Content -->\n    <div style=\"padding: 30px;\">\n      <h2 style=\"color: #333; font-size: 20px; margin-bottom: 20px;\">Dettagli Richiesta</h2>\n      \n      <table style=\"width: 100%; border-collapse: collapse;\">\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666; width: 35%;\">\n            <strong>Nome:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #333;\">\n            ${data.nome}\n          </td>\n        </tr>\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666;\">\n            <strong>Email:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee;\">\n            <a href=\"mailto:${data.email}\" style=\"color: #667eea; text-decoration: none;\">\n              ${data.email}\n            </a>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666;\">\n            <strong>Telefono:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee;\">\n            <a href=\"tel:${data.telefono}\" style=\"color: #667eea; text-decoration: none;\">\n              ${data.telefono}\n            </a>\n          </td>\n        </tr>\n        ${data.azienda ? `\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666;\">\n            <strong>Azienda:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #333;\">\n            ${data.azienda}\n          </td>\n        </tr>\n        ` : ''}\n        ${data.comune ? `\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666;\">\n            <strong>Comune:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #333;\">\n            ${data.comune}\n          </td>\n        </tr>\n        ` : ''}\n        ${data.servizi && data.servizi.length > 0 ? `\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666;\">\n            <strong>Servizi:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #333;\">\n            ${data.servizi.join(', ')}\n          </td>\n        </tr>\n        ` : ''}\n        ${data.urgenza ? `\n        <tr>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee; color: #666;\">\n            <strong>Urgenza:</strong>\n          </td>\n          <td style=\"padding: 12px; border-bottom: 1px solid #eee;\">\n            <span style=\"display: inline-block; padding: 4px 12px; border-radius: 20px; font-size: 12px; background-color: ${data.urgenza === 'urgente' ? '#ff4444' : '#4CAF50'}; color: white;\">\n              ${data.urgenza.toUpperCase()}\n            </span>\n          </td>\n        </tr>\n        ` : ''}\n        ${data.messaggio ? `\n        <tr>\n          <td style=\"padding: 12px; color: #666; vertical-align: top;\">\n            <strong>Messaggio:</strong>\n          </td>\n          <td style=\"padding: 12px; color: #333;\">\n            <div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 8px; white-space: pre-wrap;\">\n              ${data.messaggio}\n            </div>\n          </td>\n        </tr>\n        ` : ''}\n      </table>\n      \n      <!-- CTA -->\n      <div style=\"margin-top: 30px; padding: 20px; background-color: #f8f9fa; border-radius: 8px; text-align: center;\">\n        <p style=\"margin: 0 0 15px 0; color: #666; font-size: 14px;\">\n          Rispondi direttamente a questa email o contatta il cliente:\n        </p>\n        <a href=\"mailto:${data.email}\" style=\"display: inline-block; padding: 12px 30px; background-color: #667eea; color: white; text-decoration: none; border-radius: 25px; font-weight: 600;\">\n          Rispondi al Cliente\n        </a>\n      </div>\n    </div>\n    \n    <!-- Footer -->\n    <div style=\"background-color: #f8f9fa; padding: 20px; text-align: center; border-top: 1px solid #eee;\">\n      <p style=\"color: #999; font-size: 12px; margin: 0;\">\n        IT-ERA - Servizi IT Professionali<br>\n        Viale Risorgimento 32, Vimercate (MB)<br>\n        Tel: 039 888 2041 | P.IVA: 10524040966\n      </p>\n      <p style=\"color: #999; font-size: 11px; margin: 10px 0 0 0;\">\n        Questa email \u00E8 stata inviata dal sistema automatico del sito web IT-ERA\n      </p>\n    </div>\n  </div>\n</body>\n</html>\n  `;\n\n  const textContent = `\nNuova richiesta dal sito IT-ERA\n\nDETTAGLI RICHIESTA\n------------------\nNome: ${data.nome}\nEmail: ${data.email}\nTelefono: ${data.telefono}\n${data.azienda ? `Azienda: ${data.azienda}` : ''}\n${data.comune ? `Comune: ${data.comune}` : ''}\n${data.servizi && data.servizi.length > 0 ? `Servizi: ${data.servizi.join(', ')}` : ''}\n${data.urgenza ? `Urgenza: ${data.urgenza}` : ''}\n${data.messaggio ? `\\nMessaggio:\\n${data.messaggio}` : ''}\n\n--\nIT-ERA - Servizi IT Professionali\nViale Risorgimento 32, Vimercate (MB)\nTel: 039 888 2041 | P.IVA: 10524040966\n  `;\n\n  try {\n    // Prima prova con dominio verificato info@it-era.it\n    let emailFrom = `${CONFIG.EMAIL_FROM_NAME} <${CONFIG.EMAIL_FROM}>`;\n    let emailTo = CONFIG.EMAIL_TO;\n    let usedFallback = false;\n    \n    // Primo tentativo con configurazione principale\n    let response = await fetch('https://api.resend.com/emails', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        from: emailFrom,\n        to: [emailTo],\n        reply_to: data.email, // Rispondi direttamente al cliente\n        subject: `${CONFIG.EMAIL_SUBJECT_PREFIX} ${data.formType || 'Richiesta'} - ${data.nome}`,\n        html: htmlContent,\n        text: textContent,\n        tags: [\n          { name: 'source', value: 'website' },\n          { name: 'type', value: data.formType || 'contact' }\n        ]\n      }),\n    });\n    \n    // Se fallisce per dominio non verificato, usa fallback\n    if (!response.ok && response.status === 403) {\n      const errorText = await response.text();\n      if (errorText.includes('verify a domain') || errorText.includes('testing emails')) {\n        console.log('Dominio non verificato, usando fallback...');\n        \n        // Usa sender di fallback e email di test\n        emailFrom = `${CONFIG.EMAIL_FROM_NAME} <${CONFIG.EMAIL_FROM_FALLBACK}>`;\n        emailTo = CONFIG.EMAIL_TO_TEST; // Temporaneo finch\u00E9 non verifichiamo dominio\n        usedFallback = true;\n        \n        // Riprova con fallback\n        response = await fetch('https://api.resend.com/emails', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${env.RESEND_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            from: emailFrom,\n            to: [emailTo],\n            reply_to: data.email,\n            subject: `${CONFIG.EMAIL_SUBJECT_PREFIX} ${data.formType || 'Richiesta'} - ${data.nome}`,\n            html: htmlContent + `<p style=\"color: #999; font-size: 10px; margin-top: 20px;\">Nota: Email inviata tramite sistema di test. Destinatario finale: ${CONFIG.EMAIL_TO}</p>`,\n            text: textContent + `\\n\\nNota: Email inviata tramite sistema di test. Destinatario finale: ${CONFIG.EMAIL_TO}`,\n            tags: [\n              { name: 'source', value: 'website' },\n              { name: 'type', value: data.formType || 'contact' },\n              { name: 'fallback', value: 'true' }\n            ]\n          }),\n        });\n      }\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Resend API error:', {\n        status: response.status,\n        statusText: response.statusText,\n        error: errorText\n      });\n      \n      // Parse error if JSON\n      let errorMessage = errorText;\n      try {\n        const errorJson = JSON.parse(errorText);\n        errorMessage = errorJson.message || errorJson.error || errorText;\n      } catch (e) {\n        // Keep original error text\n      }\n      \n      return { success: false, error: errorMessage, status: response.status };\n    }\n\n    const result = await response.json();\n    return { success: true, id: result.id, usedFallback };\n  } catch (error) {\n    console.error('Email send error:', error);\n    return { success: false, error: error.message };\n  }\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const origin = request.headers.get('Origin') || '';\n\n    // Health check endpoint\n    if (url.pathname === '/health') {\n      return new Response(JSON.stringify({ \n        status: 'ok',\n        service: 'IT-ERA Email Service',\n        provider: 'Resend',\n        timestamp: new Date().toISOString()\n      }), {\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    // Gestione OPTIONS per CORS\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        headers: corsHeaders(origin),\n      });\n    }\n\n    // Solo POST su /api/contact\n    if (request.method !== 'POST' || url.pathname !== '/api/contact') {\n      return new Response(JSON.stringify({ \n        error: 'Method not allowed',\n        message: 'Use POST /api/contact'\n      }), {\n        status: 405,\n        headers: corsHeaders(origin),\n      });\n    }\n\n    try {\n      // Get client IP\n      const ip = request.headers.get('CF-Connecting-IP') || \n                 request.headers.get('X-Forwarded-For') || \n                 'unknown';\n\n      // Rate limiting\n      if (env.CONTACT_KV) {\n        const canProceed = await checkRateLimit(ip, env.CONTACT_KV);\n        if (!canProceed) {\n          return new Response(JSON.stringify({ \n            success: false,\n            error: 'Troppe richieste. Riprova domani.' \n          }), {\n            status: 429,\n            headers: corsHeaders(origin),\n          });\n        }\n      }\n\n      // Parse body\n      const data = await request.json();\n\n      // Validazione campi obbligatori\n      const errors = [];\n      \n      if (!data.nome || data.nome.length < 2) {\n        errors.push('Nome richiesto (minimo 2 caratteri)');\n      }\n      \n      if (!data.email || !isValidEmail(data.email)) {\n        errors.push('Email valida richiesta');\n      }\n      \n      if (!data.telefono || !isValidPhone(data.telefono)) {\n        errors.push('Numero di telefono valido richiesto');\n      }\n      \n      if (!data.privacy) {\n        errors.push('Accettazione privacy richiesta');\n      }\n\n      if (errors.length > 0) {\n        return new Response(JSON.stringify({ \n          success: false, \n          errors \n        }), {\n          status: 400,\n          headers: corsHeaders(origin),\n        });\n      }\n\n      // Sanitizza tutti gli input\n      const sanitizedData = {\n        nome: sanitizeInput(data.nome),\n        azienda: sanitizeInput(data.azienda),\n        email: sanitizeInput(data.email),\n        telefono: sanitizeInput(data.telefono),\n        comune: sanitizeInput(data.comune),\n        dipendenti: sanitizeInput(data.dipendenti),\n        servizi: Array.isArray(data.servizi) ? data.servizi.map(s => sanitizeInput(s)) : [],\n        urgenza: sanitizeInput(data.urgenza),\n        messaggio: sanitizeInput(data.messaggio),\n        formType: sanitizeInput(data.formType || 'preventivo'),\n      };\n\n      // Invia email con Resend\n      const emailResult = await sendEmailResend(sanitizedData, env);\n      if (!emailResult.success) {\n        // Return more detailed error for debugging\n        return new Response(JSON.stringify({\n          success: false,\n          error: emailResult.error || 'Failed to send email',\n          status: emailResult.status,\n          debug: 'Resend API error'\n        }), {\n          status: 400,\n          headers: corsHeaders(origin),\n        });\n      }\n\n      // Salva su database se disponibile\n      if (env.CONTACT_DB) {\n        try {\n          const query = `\n            INSERT INTO contacts (\n              nome, azienda, email, telefono, comune, dipendenti,\n              servizi, urgenza, messaggio, form_type, ip_address, created_at\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n          `;\n          \n          await env.CONTACT_DB.prepare(query).bind(\n            sanitizedData.nome,\n            sanitizedData.azienda || null,\n            sanitizedData.email,\n            sanitizedData.telefono,\n            sanitizedData.comune || null,\n            sanitizedData.dipendenti || null,\n            JSON.stringify(sanitizedData.servizi || []),\n            sanitizedData.urgenza || 'normale',\n            sanitizedData.messaggio || null,\n            sanitizedData.formType || 'preventivo',\n            ip,\n            new Date().toISOString()\n          ).run();\n        } catch (dbError) {\n          console.error('Database error:', dbError);\n          // Non bloccare l'invio se il DB fallisce\n        }\n      }\n\n      // Analytics\n      if (env.ANALYTICS_KV) {\n        const today = new Date().toISOString().split('T')[0];\n        const analyticsKey = `leads:${today}`;\n        const currentCount = await env.ANALYTICS_KV.get(analyticsKey) || '0';\n        await env.ANALYTICS_KV.put(analyticsKey, String(parseInt(currentCount) + 1), {\n          expirationTtl: 86400 * 30 // 30 giorni\n        });\n      }\n\n      return new Response(JSON.stringify({\n        success: true,\n        message: emailResult.usedFallback ? \n          'Richiesta registrata! (Sistema in modalit\u00E0 test - verifica dominio in corso)' :\n          'Richiesta inviata con successo! Ti contatteremo entro 2 ore lavorative.',\n        ticketId: `ITERA-${Date.now()}`,\n        emailId: emailResult.id,\n        usedFallback: emailResult.usedFallback\n      }), {\n        status: 200,\n        headers: corsHeaders(origin),\n      });\n\n    } catch (error) {\n      console.error('Errore:', error);\n      \n      // In development, return detailed error\n      const isDev = url.hostname.includes('localhost') || url.hostname.includes('127.0.0.1');\n      const errorMessage = isDev ? \n        `Errore: ${error.message || error}` : \n        'Errore durante l\\'invio. Riprova o contattaci al 039 888 2041.';\n      \n      return new Response(JSON.stringify({\n        success: false,\n        error: errorMessage,\n        details: isDev ? error.stack : undefined\n      }), {\n        status: 500,\n        headers: corsHeaders(origin),\n      });\n    }\n  },\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch", "import_checked_fetch"]
}
